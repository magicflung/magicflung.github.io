<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>flunggg</title>
  
  <subtitle>做自己喜欢的事</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://flunggg.cn/"/>
  <updated>2020-01-13T04:32:24.835Z</updated>
  <id>https://flunggg.cn/</id>
  
  <author>
    <name>flunggg</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL数据库(七)简单查询操作</title>
    <link href="https://flunggg.cn/archives/6ca57e6e.html"/>
    <id>https://flunggg.cn/archives/6ca57e6e.html</id>
    <published>2020-01-13T04:31:44.000Z</published>
    <updated>2020-01-13T04:32:24.835Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前提要述：参考书籍《MySQL必知必会》</p></blockquote><h2 id="7-1-检索数据"><a href="#7-1-检索数据" class="headerlink" title="7.1 检索数据"></a>7.1 检索数据</h2><p>为了查询出数据库表中的行（数据），使用SELECE语句。</p><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># 第一种</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">SELECT * FROM &lt;table_name&gt;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># 第二种</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">SELECT field1,field2,... FROM &lt;table_name&gt;;</span></pre></td></tr></table></figure><ul><li>第一种写法使用*通配符，会把表中行的列全部查询出来，而不必取一一列出全部列。但是不推荐使用，这跟INSERT语句的规范写法一样。<strong>使用*通配符，列的顺序一般是列在表定义中出现的顺序，但有时候并不是这样的，表的模式的变化（如添加或删除列）可能会导致顺序的变化。特别是像使用INSERT SELECT这样的语句，可能会报错，甚至可能会不会报错但是数据插入错误的列。</strong></li><li><strong>推荐使用第二种，第二种查询方式可以查询表中行的全部列，也可以查询表中行的单列或多列。</strong></li><li>使用通配符注意事项：虽然使用通配符可能会省事，不用明确列出所需列，但检索不需要的列通常会降低检索和应用程序的性能。</li></ul><p>例如：</p><ul><li>单列查询：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SELECT stu_name FROM student;</span></pre></td></tr></table></figure><ul><li>多列查询：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SELECT stu_name, stu_sex FROM student;</span></pre></td></tr></table></figure><ul><li>查询全部列：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SELECT * FROM student;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># 或（推荐）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">SELECT stu_id, stu_name, stu_sex FROM student;</span></pre></td></tr></table></figure><h2 id="7-2-检索不同的行"><a href="#7-2-检索不同的行" class="headerlink" title="7.2 检索不同的行"></a>7.2 检索不同的行</h2><p>因为在表中有时候需要进行去重操作，可以使用DISTINCT关键字，让SELECT查询的结果返回不同的值。</p><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT field1,field2,... FROM &lt;stable_name&gt;;</span></pre></td></tr></table></figure><p>DISTINCT关键字的注意：</p><ul><li>如果是单列，那么使用该关键字会将该列作为判断去重的条件。</li><li>如果是多列，那么会将该多列作为判断去重的条件。</li><li>使用这些单列或多列作为去重条件，如果在表中都是不相同的，那么就会将所有行都查出来。</li></ul><h2 id="7-3-限制结果"><a href="#7-3-限制结果" class="headerlink" title="7.3 限制结果"></a>7.3 限制结果</h2><p>SELECT语句返回所有匹配的行。如果为了返回第一行或前几行，那么可以使用LIMIT子句。</p><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># 第一种（n为整数）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">SELECT field1,field2,... FROM &lt;stable_name&gt; LIMIT n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># 第二种 (n，m为整数, n&gt;&#x3D;0, m&gt;&#x3D;1)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">SELECT field1,field2,... FROM &lt;stable_name&gt; LIMIT n,m;</span></pre></td></tr></table></figure><p>解释：</p><ul><li>第一种写法，对于查询出的数据（行）只返回不多于n行。</li><li>第二种写法，LIMIT后的n表示查询的开始的位置，m表示要检索的行数。即，从第n行开始查询m行。</li><li>LIMIT后n是从0开始的，所以检索出来的第一行为行0而不是行1。因此，LIMIT 1,1 是将检索出第二行而不是第一行。</li><li>如果LIMIT指定要检索的行数超过表中的行数，那么MySQL将返回它能返回的那么多行。</li></ul><p>因为有人会把LIMIT n,m的语法搞混，比如LIMIT 3,4 是从行4开始的3行还是从行3开始的4行？如上面所述，它的意思是从行3开始的4行。<br>所以，<strong>MySQL 5支持LIMIT的另一种代替语法：LIMIT 4 OFFSET 3，意思是从行3开始取4行。</strong></p><h2 id="7-4-使用完全限定的表名"><a href="#7-4-使用完全限定的表名" class="headerlink" title="7.4 使用完全限定的表名"></a>7.4 使用完全限定的表名</h2><p>到目前为止SQL例子只通过列名引用列。也可能会使用完全限定的名称来引用列（同时使用表明和列名），如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SELECT &lt;stable_name&gt;.field1,&lt;stable_name&gt;.field2,...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    FROM &lt;stable_name&gt;;</span></pre></td></tr></table></figure><p>在单表时可能看不出什么差别，但是在多表查询时，<strong>并且是那种有相关联的表，因为有可能两张表会有相同的列名，所以需要使用完全限定的表名来区分。</strong></p>]]></content>
    
    <summary type="html">
    
      简单查询操作
    
    </summary>
    
    
      <category term="数据库" scheme="https://flunggg.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://flunggg.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库(六)更新和删除操作</title>
    <link href="https://flunggg.cn/archives/821101a1.html"/>
    <id>https://flunggg.cn/archives/821101a1.html</id>
    <published>2020-01-13T04:24:11.000Z</published>
    <updated>2020-01-13T04:25:03.811Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前提要述：参考书籍《MySQL必知必会》</p></blockquote><h2 id="6-1-更新数据"><a href="#6-1-更新数据" class="headerlink" title="6.1 更新数据"></a>6.1 更新数据</h2><p>为了更新（修改）表中的数据，可使用UPDATE语句。可采用两种方式使用UPDATE：</p><ul><li>更新表中特定的行；</li><li>更新表中所有的行。</li></ul><p>UPDATE语法的结构由3部分组成：</p><ul><li>要更新的表；</li><li>列名和它们的新值；</li><li>确定要更新行的过滤条件（WHERE关键字）。</li></ul><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">UPDATE &lt;table_name&gt; SET field1&#x3D;newValue1, field2&#x3D;newValue2,...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    WHERE condition;</span></pre></td></tr></table></figure><p>解释：</p><ul><li>SET命令用来将新值赋给被更新的列。</li><li><strong>使用WHERE子句来告诉MySQL要更新哪一行，一般会选择一个可以唯一区别其他行的字段作为条件。如果没有WHERE子句那么就会更新表中所有的行，这是非常致命的问题。</strong></li></ul><p>比如：在学生表中修改李四的性别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">UPDATE student SET stu_sex&#x3D;&#39;女&#39; WHERE stu_name&#x3D;&#39;李四&#39;;</span></pre></td></tr></table></figure><p>如果为了删除某个列的值，则可以设置为NULL（假设表定义允许NULL值）</p><p>在UPDATE语句中可以使用子查询的结果来更新数据；如果在更新一行或多行时出现一个错误，则整个UPDATE操作都会被取消（错误发生前更新的所有列被恢复到它们原来的值）。即使是错误，如果要继续执行更新，则可以使用IGNORE关键字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">UPDATE IGNORE &lt;table_name&gt;...;</span></pre></td></tr></table></figure><h2 id="6-2-删除数据"><a href="#6-2-删除数据" class="headerlink" title="6.2 删除数据"></a>6.2 删除数据</h2><p>为了将一个表中的某一行删除，使用DELETE语句。可以有两种方式使用DELETE:</p><ul><li>从表中删除特定的行；</li><li>从表中删除所有行。</li></ul><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">DELETE FROM &lt;table_name&gt; WHERE condition;</span></pre></td></tr></table></figure><p>解释：</p><ul><li>DELETE不需要列名和通配符。<strong>DELETE删除整行而不是删除列</strong><br>。如果要删除列，使用UPDATE。</li><li><strong>DELETE跟UPDATE一样，都必须要有WHERE，即指定要删除哪一行，所以必须注意；除非你要删除表中全部数据，那就不加WHERE。</strong></li><li>WHERE一般指定的是能够唯一区分行的字段，比如主键，名字（假设没有重名的话）</li></ul><p>例如：删除学生表中名为李四的学生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">DELETE FROM student WHERE stu_name&#x3D;&#39;李四&#39;;</span></pre></td></tr></table></figure><p><strong>如果想要更快的从表中删除所有的行，不要使用DELETE，使用TRUNCATE TABLE语句，它完成相同的工作，但是速度更快。因为TRUNCATE实际是删除原来的表并重新创建一个表，而不是逐行删除表中的数据。</strong></p><h2 id="6-3-更新和删除的指导原则"><a href="#6-3-更新和删除的指导原则" class="headerlink" title="6.3 更新和删除的指导原则"></a>6.3 更新和删除的指导原则</h2><p>SQL程序员使用UPDATE和DELETE必须遵循的习惯：</p><ul><li>除非确实打算更新和删除每一行，否则绝不要使用不带WHERE子句的UPDATE或DELETE语句。</li><li>保证每个表都是有主键的，尽可能像WHERE子句那样使用它（可以指定各主键，多个值或值的范围）。</li><li>在对UPDATE或DELETE语句使用WHERE子句前，应该先用SELECT查询语句进行测试，保证它过滤的是正确的记录，以防止编写WHERE子句不正确。</li><li>使用强制实施引用完整性的数据库，这样MySQL将不允许删除具有与其他表相关联的数据的行（外键）。</li><li>MySQL没有撤销（undo）按钮，所以应该小心使用UPDATE和DELETE语句。</li></ul>]]></content>
    
    <summary type="html">
    
      更新和删除操作
    
    </summary>
    
    
      <category term="数据库" scheme="https://flunggg.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://flunggg.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库(五)插入操作</title>
    <link href="https://flunggg.cn/archives/d51ba115.html"/>
    <id>https://flunggg.cn/archives/d51ba115.html</id>
    <published>2020-01-13T04:23:09.000Z</published>
    <updated>2020-01-13T04:25:03.805Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前提要述：参考书籍《MySQL必知必会》  </p></blockquote><p>《MySQL必知必会》是先讲了查询，但是没有记录就无法查询，所以先将如何添加数据。</p><p>表已经知道怎么创建了，随便创两张。</p><h2 id="5-1-插入数据"><a href="#5-1-插入数据" class="headerlink" title="5.1 插入数据"></a>5.1 插入数据</h2><p>MySQL使用 INSERT来插入（或添加）行（记录）到数据库表中。插入可用以下几种方式使用：</p><ul><li>插入完整的行（记录）；</li><li>插入行的一部分；</li><li>插入多行；</li><li>插入某些查询结果。</li></ul><h2 id="5-2-插入完整的行（记录）"><a href="#5-2-插入完整的行（记录）" class="headerlink" title="5.2 插入完整的行（记录）"></a>5.2 插入完整的行（记录）</h2><p>什么叫完整的行，即插入的有效数据都可以对应表中的每一列。</p><p>把数据插入表中，最简单的方法是使用基本的INSERT语法，需要指定表名和被插入到新行中的值，格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># 写法：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">INSERT INTO &lt;table_name&gt; VALUES(value1，value2，...);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># 规范写法：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">INSERT INTO &lt;table_name&gt;(field1, field2, ...) VALUES(value1，value2，...);</span></pre></td></tr></table></figure><p> 解释：</p><ul><li>如果使用第一种写法，<strong>虽然很简单，但是并不安全，应该尽量避免使用。因为该语句高度依赖于表中列的次序，并且还依赖其次序容易获得的信息。即使可得到这种次序信息，也不能保证下次表结构变动后各个列保持完全相同的次序</strong>。所以在开发中如果这样写，那么就是把插入语句写死了。因为数据库表中的列的顺序有可能可能会改变，一旦改变，就会出现致命错误，比如：一个varchar类型的可能会被插入到char中，如果超长度可能会报错，而且varchar是大范围而char是小范围，可能会导致数据丢失；而如果一个浮点型的数据因为列顺序的改变插入到了一个整型的列中，这又不会报错，所以也很难找错。</li><li>推荐使用规范写法，特别是在开发时编写sql语句。<strong>因为一旦指定列名，那么VALUES必须以其指定的次序匹配指定的列名，不一定按各个列出现在实际表中的次序。</strong> 所以即使表的结构改变，此INSERT语句仍然可以正确工作。</li><li>第一种写法必须完整的给出表中的全部列的值，并且还得按照表中列的次序；而规范写法不用，因为会根据<table_name>(field1, field2, …)来进行赋值，即使跟表中的列的次序不一样，或者一些列不想赋值。</table_name></li></ul><hr><p>例子：在学生表中插入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT INTO student(stu_id, stu_name, stu_sex)  VALUES(1, &#39;张三&#39;, &#39;男&#39;);</span></pre></td></tr></table></figure><p>注意：字符串或字符需要使用’’（单引号）圈起来。</p><p>输出：如果成功的话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Query OK, 1 row affected (0.01 sec)</span></pre></td></tr></table></figure><p>而如果在主键使用了自增长（AUTO_INCREMENT），那么则可以这样写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT INTO student(stu_id, stu_name, stu_sex)  VALUES(null, &#39;张三&#39;, &#39;男&#39;);</span></pre></td></tr></table></figure><p>或者，不写主键：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT INTO student(stu_name, stu_sex)  VALUES(&#39;张三&#39;, &#39;男&#39;);</span></pre></td></tr></table></figure><p>也就是插入时，在主键的位置直接插入null或者不写默认就是赋给null，MySQL会因为AUTO_INCREMENT自己给它赋值。</p><hr><ul><li>如果对表中不允许NULL值且没有默认值的列不给出值（插入时省略了），则MySQL将产生一条错误信息，并且相应的行插入不成功。</li><li>规范写法哪些列可以省略不写：<ul><li><strong>该列定义为允许NULL值（无值或空值）；</strong></li><li><strong>在表定义中给出默认值。也就表示如果在插入时不给出值，就会使用默认值；</strong></li><li><strong>使用AUTO_INCREMENT的列。</strong></li></ul></li><li>INSERT操作可能很耗时（特别是有很多索引需要更新时），而且它可能降低等待处理的SELECT语句的性能。如果数据检索是最重要的，则可以通过在INSERT和INTO之间添加关键字LOW_PRIORITY，指示MySQL降低INSERT语句的优先级。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT LOW_PRIORITY INTO</span></pre></td></tr></table></figure><ul><li>UPDATE操作和DELETE操作也适用。</li></ul><h2 id="5-3-插入多个行"><a href="#5-3-插入多个行" class="headerlink" title="5.3 插入多个行"></a>5.3 插入多个行</h2><p>INSERT可以插入一行到一个表中，也可以插入多行到一个表中，第一种方式就是写多条INSERT语句，还有一种方式就是在一条INSERT语句中插入多行。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT INTO &lt;table_name&gt;(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    field1,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    field2,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    )</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    VALUES(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        valueA1,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        valueA2,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        ),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        (</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        valueB1,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        valueB2,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    );</span></pre></td></tr></table></figure><p>此写法可以提供INSERT的性能，因为MySQL用单条INSERT语句处理多个插入比使用多条INSERT快。</p><h2 id="5-4-插入检索出的数据"><a href="#5-4-插入检索出的数据" class="headerlink" title="5.4 插入检索出的数据"></a>5.4 插入检索出的数据</h2><p>INSERT语句可以利用一条SELECT语句查询的结果插入到表中。也就是所谓的INSERT SELECT，它是由一条INSERT语句和一条SELECT语句构成。</p><p>比如我需要把一张表的数据复制到另一张表，语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">INSERT INTO &lt;new_table_name&gt;(field1, field2, ...) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    SELECT field1, field2 FROM &lt;old_table_name&gt;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># 或 也就是列名可以不同</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">INSERT INTO &lt;new_table_name&gt;(field1, field2, ...) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    SELECT f1, f2 FROM &lt;old_table_name&gt;;</span></pre></td></tr></table></figure><p>注意：如果新表不存在则报错。<br>解释：</p><ul><li>先使用SELECT语句从旧表中查询出数据，然后再使用INSERT语句把查询的结果插入到新表中。</li><li>SELECT列出的每一个列对应于<new_table_name>后所跟的列表中的每一个列。</new_table_name></li><li>如果<old_table_name>为空，即没有行可以插入也不会报错。</old_table_name></li><li><strong>如果能保证从旧表导入到新表（假设新表有数据）的主键值不会重复，那么插入时可以省略这主键，比如有AUTO_INCREMENT的主键就可以省略。</strong></li><li><strong>在INSERT和SELECT语句中使用相同的列名，但是不一定要求列名匹配。实际上，MySQL甚至不关心SELECT返回的列名。它使用的是列的位置</strong>，因此SELECT中的第一列（不管列名）将用来填充表列中指定的第一个列，第二列将用来填充表列中指定的第二列等。</li><li>INSERT SELECT中SELECT语句可包含WHERE子句以过滤插入的数据。</li></ul>]]></content>
    
    <summary type="html">
    
      插入操作
    
    </summary>
    
    
      <category term="数据库" scheme="https://flunggg.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://flunggg.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库(四)数据库和表操作</title>
    <link href="https://flunggg.cn/archives/c30e04ba.html"/>
    <id>https://flunggg.cn/archives/c30e04ba.html</id>
    <published>2020-01-10T02:40:00.000Z</published>
    <updated>2020-01-13T03:32:53.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="4-1-连接"><a href="#4-1-连接" class="headerlink" title="4.1 连接"></a>4.1 连接</h2><p>在最初安装MySQL，可能会要求你输入一个管理登录（通常为root）和一个口令（密码）。</p><p>连接MySQL需要以下信息：</p><ul><li>主机名（计算机名）——如果连接到本地MySQL服务器，为localhost；</li><li>端口（如果使用默认端口3306之外的端口）；</li><li>一个合法的用户名（默认为root）</li><li>用户口令（密码，如果需要的话）。</li></ul><p>cmd登录前一篇有说。</p><p>会简单介绍Navicat Premium 12，但是后面都是执行命令，所以在Navicat Premium 12的命令行窗口做或者在cmd做都可以。</p><p>现在说下：Navicat Premium 12，打开它。</p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104303-263787.png"></p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104311-592179.png"></p><h2 id="4-2-创建数据库"><a href="#4-2-创建数据库" class="headerlink" title="4.2 创建数据库"></a>4.2 创建数据库</h2><p>《MySQL必知必会》前面一开始就开讲SELETE查询等，而像新手可能就会不知道怎么创建数据库，创建表；然后利用这些表去测试所学的SELETE查询等。</p><p>下面提供两种方式创建数据库：  </p><ol><li>图形界面创建数据库</li></ol><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104334-611903.png"></p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200113/20200113112658-212527.png"></p><p>那么数据库就创建完成。</p><ol start="2"><li>命令行创建数据库</li></ol><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104407-783498.png"></p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104417-837863.png"></p><p>然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE DATABASE ts;</span></pre></td></tr></table></figure><p>更加规范的写法（推荐）：<br>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS &lt;数据库名&gt; DEFAULT CHARACTER SET&#x3D;&#39;utf8&#39;;</span></pre></td></tr></table></figure><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS ts DEFAULT CHARACTER SET&#x3D;&#39;utf8&#39;;</span></pre></td></tr></table></figure><p>解释：</p><ul><li>CREATE DATABASE ts：表示创建一个名为ts的数据库；</li><li>IF NOT EXISTS：翻译过来就是如果不存在，防止当数据库存在时会报错；</li><li>CREATE DATABASE IF NOT EXISTS ts：表示如果不存在一个名为ts的数据库，则创建该数据库；</li><li>CHARACTER SET=’utf8’：这个跟我们上面图形界面设置的一样，就是设置数据库的字符集。</li><li>; ：分号表示语句结束，所以每一条语句都需要分号结尾。</li></ul><p>注意：写的时候注意中英文符号，比如 ‘’。</p><h2 id="4-3-删除数据库"><a href="#4-3-删除数据库" class="headerlink" title="4.3 删除数据库"></a>4.3 删除数据库</h2><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">drop database &lt;数据库名&gt;;</span></pre></td></tr></table></figure><h2 id="4-4-选择数据库"><a href="#4-4-选择数据库" class="headerlink" title="4.4 选择数据库"></a>4.4 选择数据库</h2><p>可以看到我们刚刚是在my连接这里开启命令界面，我们操作的使用并不是对所有数据库进行操作，而是对单个数据库进行操作，那么就需要输入选择数据库的语句。</p><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">USE &lt;数据库名&gt;;</span></pre></td></tr></table></figure><p>选择刚刚建立的ts数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">USE ts;</span></pre></td></tr></table></figure><p>命令行界面会返回：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Database changed # 表示成功</span></pre></td></tr></table></figure><h2 id="4-5-了解数据库和表"><a href="#4-5-了解数据库和表" class="headerlink" title="4.5 了解数据库和表"></a>4.5 了解数据库和表</h2><p>数据库、表、用户、列、权限等信息被存储在数据库和表中（MySQL用MySQL来存储这些信息）。不过，内部的表一般不直接访问。可用MySQL的SHOW命令来显示这些信息（MySQL从内部表中提取这些信息）。</p><ol><li>查询已经存在的数据库(包括MySQL系统数据库：mysql和information_schema)：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;</span></pre></td></tr></table></figure><p>输出：<br><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104436-724208.png"></p><ol start="2"><li>获取一个数据库中的表的列表，前提是已经选择数据库，不然也不知道你要获取哪个数据库，假设获取mysql数据库的表。这里只是演示，一般别去动mysql数据库，毕竟是mysql的系统数据库。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">USE mysql;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">SHOW TABLES; # 显示数据库的全部表</span></pre></td></tr></table></figure><p>输出：<br><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110105347-683217.png"></p><ol start="3"><li>显示一个表中的列</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">USE mysql;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">SHOW COLUMNS FROM 表名称;</span></pre></td></tr></table></figure><p>输出：<br><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104506-805857.png"></p><p>MySQL支持用 DESCRIBE 作为 SHOW COLUMNS FROM 的一种快捷方式。</p><p>4.其他的SHOW语句：</p><ul><li>SHOW STATUS：用于显示广泛的服务器状态信息；</li><li>SHOW CREATE DATABASE和SHOW CREATE TABLE：分别用来显示创建特定数据库或表的MySQL语句；</li><li>SHOW GRANTS：用来显示授予用户（所有用户或特定用户）的安全权限；</li><li>SHOW ERRORS和SHOW WARNINGS：用来显示服务器错误或警告消息。</li></ul><h2 id="4-6-MySQL数据类型"><a href="#4-6-MySQL数据类型" class="headerlink" title="4.6 MySQL数据类型"></a>4.6 MySQL数据类型</h2><p><a href="https://www.runoob.com/mysql/mysql-data-types.html" target="_blank" rel="external nofollow noopener noreferrer">转自菜鸟教程</a></p><p>MySQL中定义数据字段的类型对你数据库的优化是非常重要的。</p><p>MySQL支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。</p><h3 id="4-6-1-数值类型"><a href="#4-6-1-数值类型" class="headerlink" title="4.6.1 数值类型"></a>4.6.1 数值类型</h3><p>MySQL支持所有标准SQL数值数据类型。这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。  </p><p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p><p>BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。  </p><p>作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。<br><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104519-460960.png"></p><h3 id="4-6-2-日期和时间类型"><a href="#4-6-2-日期和时间类型" class="headerlink" title="4.6.2 日期和时间类型"></a>4.6.2 日期和时间类型</h3><p>表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。</p><p>每个时间类型有一个有效值范围和一个”零”值，当指定不合法的MySQL不能表示的值时使用”零”值。</p><p>TIMESTAMP类型有专有的自动更新特性，将在后面描述。<br><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104528-868714.png"></p><h3 id="4-6-3-字符串类型"><a href="#4-6-3-字符串类型" class="headerlink" title="4.6.3 字符串类型"></a>4.6.3 字符串类型</h3><p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。<br><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104538-243316.png"><br>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p><p>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p><p>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</p><p>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。</p><p><a href="https://www.runoob.com/mysql/mysql-data-types.html" target="_blank" rel="external nofollow noopener noreferrer">转自菜鸟教程评论区</a>：</p><p>关于 char、varchar 与 text 平时没有太在意，一般来说，可能现在大家都是用 varchar。但是当要存储的内容比较大时，究竟是选择 varchar 还是 text 呢？</p><p>这三种类型比较：</p><ol><li>char:  char 不用多说了，它是定长格式的，==<strong>但是长度范围是 0~255。 当你想要储存一个长度不足 255 的字符时，Mysql 会用空格来填充剩下的字符。因此在读取数据时，char 类型的数据要进行处理，把后面的空格去除。</strong>== 这就是一个坑。</li><li>varchar:  关于 varchar，有的说最大长度是 255，也有的说是 65535，查阅很多资料后发现是这样的：++varchar 类型在 5.0.3 以下的版本中的最大长度限制为 255++，而++在 5.0.3 及以上的版本中，varchar 数据类型的长度支持到了 65535++，也就是说可以存放 65532 个字节（==注意是字节而不是字符！！！==）的数据（起始位和结束位占去了3个字节），也就是说，在 5.0.3 以下版本中需要使用固定的 TEXT 或 BLOB 格式存放的数据可以在高版本中使用可变长的 varchar 来存放，这样就能有效的减少数据库文件的大小。</li><li>text: 与 char 和 varchar 不同的是，text 不可以有默认值，其最大长度是 2 的 16 次方-1</li></ol><p>总结起来，有几点：</p><ul><li>经常变化的字段用 varchar</li><li>知道固定长度的用 char（比如性别）</li><li>超过 255 字符的只能用 varchar 或者 text</li><li>能用 varchar 的地方不用 text</li><li>理论上在表中的列全都可以使用varchar来定义列的数据类型，但是千万不要这样，最好根据列的实际情况选择对应的数据类型，并且可以优化数据库，比如：性别-》char，学生学号位一般用整型来存储。</li></ul><p><a href="https://blog.csdn.net/u013412790/article/details/51615407" target="_blank" rel="external nofollow noopener noreferrer">下面转载</a><br>数据类型的选择特别重要：</p><ol><li>数据类型会影响存储空间的开销。</li><li>数据类型会影响数据库查询性能。</li></ol><p><strong>所以当一个数据类型可以有多种选择多种类型的时候，应该优先考虑数字类型，其次是日期或二进制类型，最后应该是字符类型。对于相同级别的数据类型，应该优先选择占用空间小的数据类型。</strong><br>原理：在对数据进行比较（查询条件，JOIN条件及排序）操作时：同样的数据，字符处理往往比数字处理慢，而且在数据库中，数据的处理是以页为单位，列的长度越小，数据类型占用的空间越小，利于性能的提升。</p><p>更多的优化等我看《高性能MySQL》再总结。</p><h2 id="4-7-创建数据库表"><a href="#4-7-创建数据库表" class="headerlink" title="4.7 创建数据库表"></a>4.7 创建数据库表</h2><p>创建表有两种方式：</p><ul><li>使用具有交互式创建和管理表的工具（Navicat Premium 12 图形界面）；</li><li>表也可以直接用MySQL语句操纵。</li></ul><p>利用CREATE TABLE创建表需要以下信息：</p><ul><li>新表的名称，再关键字CREATE TABLE之后给出；</li><li>表列的名字和定义，用逗号隔开</li></ul><p>创建表的语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    列名1 列的定义比如数据类型，是否为空，是否为主键等,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    列名2 列的定义，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">);</span></pre></td></tr></table></figure><p>简单创建单表的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE TABLE student(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    stu_id INT AUTO_INCREMENT,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    stu_name varchar(10) NOT NULL,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    stu_sex char(1) NULL,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    PRIMARY KEY(stu_id)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    )ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;;</span></pre></td></tr></table></figure><p>解释：</p><ul><li>如果你不想字段为 NULL 可以设置字段的属性为 NOT NULL， 在操作数据库时如果输入该字段的数据为NULL ，就会报错。</li><li>AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。</li><li>PRIMARY KEY关键字用于定义列为主键。表中的每个行必须具有唯一的主键值，也就是一个表中至少有一个主键。 可以使用多列来定义主键，列间以逗号分隔。该关键字也可以直接写在stu_id的定义中。</li><li>ENGINE 设置存储引擎（这个先别管），CHARSET 设置编码。</li></ul><p>额外：</p><blockquote><p>NULL和NOT NULL：NULL值就是没有值或缺值。允许NULL值的列也允许在插入行时不给出该列的值。不允许NULL值的列不接受该列没有值的行。  </p></blockquote><blockquote><p>理解NULL：不要把NULL值与空串相混淆。NULL值是没有值，它不是空串。如果指定’’（两个单引号，其间没有字符），这在NOT NULL列中是允许的。空串是一个有效的值，它不是无值。NULL值用关键字NULL而不是空串指定。  </p></blockquote><blockquote><p>主键中只能使用不允许NULL值得列。允许NULL值得列不能作为唯一标识。</p></blockquote><blockquote><p>AUTO_INCREMENT：被该关键字指定的列，表示每次插入数据时会对该列自动增长，通常使用它去定义主键。比如在增加一个新记录时，需要一个ID值，这ID可以任意，只要它是唯一的即可，那么最简单的就是使用下一个ID值，即当前表中最后一条记录的ID为1，那么新插入数据时，新插入的数据的ID就为2。所以就可以使用AUTO_INCREMENT自动增加ID值，我们在插入的时候也不用去理会ID是多少。<br>如何在表中获得AUTO_INCREMENT的值，输入：<br>SELECT last_insert_id();<br>就会返回最后一个AUTO_INCREMENT值。<br>也可以自己修改AUTO_INCREMENT的值，只要是唯一的。</p></blockquote><blockquote><p>DEFAULT：指定列的默认值，注意默认值不允许为函数，《MySQL必知必会》推荐使用默认值而不是使用NULL值。否则使用NOT NULL也可以。</p></blockquote><p><a href="https://www.runoob.com/mysql/mysql-create-tables.html" target="_blank" rel="external nofollow noopener noreferrer">评论区说的注意事项</a></p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110104555-897640.png"></p><h2 id="4-8-引擎类型"><a href="#4-8-引擎类型" class="headerlink" title="4.8 引擎类型"></a>4.8 引擎类型</h2><p>上面创建表中最后有一个 ENGINE=InnoDB。下面来解释一下：</p><p>MySQL与其他DBMS一样有一个具体管理和处理数据的内部引擎。比如当你使用CREATE TABLE语句时，该引擎具体创建表，而在你使用SELECE查询语句时或进行其他数据库处理时，该引擎在内部处理你的请求。所以它是对我们透明化的。</p><p>MySQL与其他DBMS不一样的是，MySQL具有多种引擎。这些引擎都隐藏在MySQL服务器内，全都能执行CREATE TABLE和SELECE等命令。</p><p>为什么要这么多引擎，因为它们具有各自不同的功能和特效，为不同的任务选择正确的引擎能够获得良好的功能和灵活性。</p><p>但是在CREATE TABLE时也可以忽略它，会自动使用默认引擎（很可能是MyISAM），多数SQL语句都会默认使用它。</p><p>==以下是几个必须知道的引擎==：</p><ul><li><strong>InnoBD是一个可靠的事务处理引擎，它步支持全文本搜索；</strong></li><li><strong>MEMORY在功能等同于MyISAM，但由于数据存储在内存（不是磁盘）中，速度很快（特别适合于临时表）。</strong></li><li><strong>MyISAM是一个性能极高的引擎，它支持全文本搜索，但不支持事务处理。</strong></li></ul><p>引擎类型可以混用。但是外键不能跨引擎。混合引擎有一个很大缺陷。<strong>外键（用于强制实施引用完整性）不能跨引擎，即使用一个引擎的表不能引用具有使用不同引擎的表的外键</strong>。</p><h2 id="4-9-删除表"><a href="#4-9-删除表" class="headerlink" title="4.9 删除表"></a>4.9 删除表</h2><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">DROP TABLE &lt;表名&gt; ;</span></pre></td></tr></table></figure><h2 id="4-10-更新表"><a href="#4-10-更新表" class="headerlink" title="4.10 更新表"></a>4.10 更新表</h2><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE &lt;表名&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">操作</span></pre></td></tr></table></figure><p>比如：<br>给表添加一个列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE student</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> ADD stu_phone CHAR(11);</span></pre></td></tr></table></figure><p>给表删除一个列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE student</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> DROP stu_phone;</span></pre></td></tr></table></figure><p>外键可以在创建表定义，也可以使用ALTER TABLE来定义，下面是定义外键的一种方式：</p><p>再创建一张班主任表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE TABLE Headmaster(</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    ma_id INT PRIMARY KEY AUTO_INCREMENT,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    ma_name VARCHAR(10) NOT NULL</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    )ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;&#39;utf8&#39;;</span></pre></td></tr></table></figure><p>先给学生表添加一个 班主任的列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE student ADD ma_id INT;</span></pre></td></tr></table></figure><p>定义外键：与学生表相关联。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ALTER TABLE student</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> ADD CONSTRAINT fk_student_master</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"> FOREIGN KEY (ma_id) REFERENCES Headmaster(ma_id);</span></pre></td></tr></table></figure><p> 外键语法：在创建表直接加上下面这句，修改表得再加个ADD</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CONSTRAINT &lt;外键名，自定义&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> FOREIGN KEY (&lt;当前表的列，比如学生表&gt;) REFERENCES &lt;要关联的表，比如班主任表&gt;(&lt;要关联的列&gt;);</span></pre></td></tr></table></figure><p>复杂得表结构更改一般需要手动删除过程，它涉及一下步骤：</p><ul><li>用新的列布局创建一个新表；</li><li>使用INSERT SELECT语句（待了解）从旧表复杂数据到新表。如果有必要，可使用转换函数和计算字段；</li><li>校验包含所需数据的新表；</li><li>重命名旧表（如果确定，可以删除它）；</li><li>用旧表原来的名字重命名新表；</li><li>根据需要，重新创建触发器，存储过程，索引和外键（除外键其他待了解）。</li></ul><p><strong>小心使用ALTER TABLE ：应该在改动前做一个完整的备份（模式和数据的备份）。数据库表的更改不能撤销，如果增加了不需要的列，可能不能删除它们。类似地，如果删除了不应该删除的列，可能会丢失该列中的所有数据。</strong></p><h2 id="4-11-重命名表"><a href="#4-11-重命名表" class="headerlink" title="4.11 重命名表"></a>4.11 重命名表</h2><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">RENAME TABLE &lt;原表名&gt; TO &lt;新表名&gt;;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      表的操作，数据库的基本操作
    
    </summary>
    
    
      <category term="数据库" scheme="https://flunggg.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://flunggg.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库(三)简介</title>
    <link href="https://flunggg.cn/archives/394debb5.html"/>
    <id>https://flunggg.cn/archives/394debb5.html</id>
    <published>2020-01-10T02:39:03.000Z</published>
    <updated>2020-01-13T04:25:40.780Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前提要述：参考书籍《MySQL必知必会》</p></blockquote><h2 id="3-1-MySQL简介"><a href="#3-1-MySQL简介" class="headerlink" title="3.1 MySQL简介"></a>3.1 MySQL简介</h2><h3 id="3-1-1-什么是MySQL"><a href="#3-1-1-什么是MySQL" class="headerlink" title="3.1.1 什么是MySQL"></a>3.1.1 什么是MySQL</h3><p>MySQL是一种关系数据库管理系统。负责数据库中数据的存储，检索，管理和处理。</p><h3 id="3-1-2-MySQL的优点"><a href="#3-1-2-MySQL的优点" class="headerlink" title="3.1.2 MySQL的优点"></a>3.1.2 MySQL的优点</h3><ul><li>成本低——MySQL是开源的，一般可以免费使用。</li><li>性能——MySQL执行快。</li><li>可信赖，体积小。</li><li>简单——MySQL很容易安装和使用。</li></ul><h3 id="3-1-3-客户机-服务器软件"><a href="#3-1-3-客户机-服务器软件" class="headerlink" title="3.1.3 客户机-服务器软件"></a>3.1.3 客户机-服务器软件</h3><p>DBMS可分为两类：</p><ol><li><strong>基于共享文件系统的DBMS</strong>，如Microsoft Access和FileMaker。用于桌面用途，通常不用于高端或更关键的应用。</li><li><strong>基于客户机-服务器的DBMS</strong>，如MySQL，Oracle以及Microsoft SQL Server等数据库。</li></ol><p>客户机-服务器应用分为两个不同的部分：</p><ol><li>服务器部分是负责所有数据访问和处理的一个软件，该软件通常运行在称为数据库服务器的计算机上；</li><li>客户机是与用户打交道的软件。</li></ol><p>例如：用户请求一个按字母顺序列出的产品表，则客户机软件通过网络提交该请求给服务器软件。服务器软件处理该请求，根据需要过滤，丢弃和排序数据；然后把结果送回到你的客户机软件上给你看。</p><p>像服务器这些操作对于用户是透明的，也就是不需要了解如何过滤如何丢弃如何排序，用户只需看到结果。多数网络的建立使用用户不具有对数据的访问权，甚至不具有对存储数据的驱动器的访问权。</p><p>让服务器的活动对用户透明化的意义：对用户不方便啊，因为为了使用MySQL，用户既要操作运行MySQL服务器软件的计算机和发布命令到MySQL的客户机软件的计算机。</p><ul><li><strong>服务器软件为MySQL_DBMS</strong>。可以在本地电脑安装运行，也可以连接到运行在你具有访问权的远程服务器上。</li><li><strong>客户机可以是MySQL提供的工具（如navicat等）、脚本语言(如Perl)、Web应用开发语言（PHP，ASP，JSP等）、程序设计语言等。</strong></li></ul><p>通过这样讲，就清楚了MySQL跟使用的Navicat Premium的区别。</p><h3 id="3-1-4-MySQL版本"><a href="#3-1-4-MySQL版本" class="headerlink" title="3.1.4 MySQL版本"></a>3.1.4 MySQL版本</h3><ul><li>《MySQL必知必会》使用的是MySQL5，下面是最近版本中引入的主要更改<ul><li>4——InnoDB引擎，增加事物处理、并、改进全文本搜索</li><li>4.1—对函数库、子查询、集成帮助等的重要增加。</li><li>5——存储过程、触发器、游标、视图等。</li></ul></li><li>以后再整理MySQL8</li></ul><h2 id="2-2-MySQL工具"><a href="#2-2-MySQL工具" class="headerlink" title="2.2 MySQL工具"></a>2.2 MySQL工具</h2><p>正如前面所述，MySQL是一个客户机-服务器的DBMS。因此要使用MySQL，需要一个客户机，即你需要用来于MySQL打交道（给MySQL提供要执行的命令）的一个应用。</p><p>客户机有很多，下面介绍4个（书上3个和另外一个）</p><h3 id="3-2-1-mysql命令行实用程序"><a href="#3-2-1-mysql命令行实用程序" class="headerlink" title="3.2.1 mysql命令行实用程序"></a>3.2.1 mysql命令行实用程序</h3><p>不教如何安装MySQL。</p><p>每个MySQL安装都有一个名为mysql的简单命令行实用程序。这个程序没有下拉菜单、流行的用户界面等，就是类似win上的cmd。</p><blockquote><p>如果仅输入mysql，可能会出现一个错误信息。可能需要安全证书，可能是MySQL没有运行在本地或者默认端口上，可能需要输入用户名和密码。默认用户名为root。<br>一般的登录是输入：mysql -uroot -p  , 然后输入密码。(-uroot = -u root)<br>可能需要更具体的用户名(默认是root)，主机名(本机localhost)，端口(默认是3306)和口令：<br>mysql -uroot -p -h localhost -P 3306</p></blockquote><p>这个工具大家都是有的。最好先熟悉一下这个。</p><h3 id="3-2-2-MySQL-Administrator"><a href="#3-2-2-MySQL-Administrator" class="headerlink" title="3.2.2 MySQL Administrator"></a>3.2.2 MySQL Administrator</h3><p>MySQL Administrator（MySQL管理器）是一个图形交互客户机，来简化MySQL服务器的管理。</p><p>这个我没用过，详细请看百度</p><h3 id="3-2-3-MySQL-Query-Browser"><a href="#3-2-3-MySQL-Query-Browser" class="headerlink" title="3.2.3 MySQL Query Browser"></a>3.2.3 MySQL Query Browser</h3><p>MySQL Query Browser也是一个图形交互客户机，用来编写和执行MySQL命令。</p><p>详细请看百度</p><h3 id="3-2-4-Navicat-Premium"><a href="#3-2-4-Navicat-Premium" class="headerlink" title="3.2.4 Navicat Premium"></a>3.2.4 Navicat Premium</h3><p>这个就是目前比较流行的，操作也很方便，也是一个图形交互客户机。推荐使用这个。</p><p><a href="https://www.lanzous.com/i8kcwjg" target="_blank" rel="external nofollow noopener noreferrer">免费下载</a></p>]]></content>
    
    <summary type="html">
    
      MySQL简介
    
    </summary>
    
    
      <category term="数据库" scheme="https://flunggg.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://flunggg.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库(一)基础</title>
    <link href="https://flunggg.cn/archives/e88f50fc.html"/>
    <id>https://flunggg.cn/archives/e88f50fc.html</id>
    <published>2020-01-10T02:28:10.000Z</published>
    <updated>2020-01-13T04:25:36.774Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前提要述：参考书籍《MySQL必知必会》</p></blockquote><h2 id="1-1-数据库基础"><a href="#1-1-数据库基础" class="headerlink" title="1.1 数据库基础"></a>1.1 数据库基础</h2><h4 id="1-1-1-什么是数据库（DataBase）"><a href="#1-1-1-什么是数据库（DataBase）" class="headerlink" title="1.1.1 什么是数据库（DataBase）"></a>1.1.1 什么是数据库（DataBase）</h4><p>数据库是一个以某种<strong>有组织的方式存储的数据集合</strong>，也就是：<strong>保存有组织的数据的容器</strong>（通常是一个文件或者一组文件）。  </p><p>对于数据库的介绍有很多术语，也可以这样理解 数据库是“==按照数据结构来组织、存储和管理数据的仓库==”。是一个长期存储在计算机内的、有组织的、有共享的、统一管理的数据集合。（百度百科） </p><h4 id="1-1-2-什么是数据库管理系统（DBMS）"><a href="#1-1-2-什么是数据库管理系统（DBMS）" class="headerlink" title="1.1.2 什么是数据库管理系统（DBMS）"></a>1.1.2 什么是数据库管理系统（DBMS）</h4><p><strong>数据库管理系统主要用来操作和管理数据库的软件，</strong>也可以称为数据库软件。它对数据库进行统一的管理和控制，以保证数据库的安全性和完整性。</p><p>比如：MySQL，Oracle，SQL Server、MongoDB等。</p><p>数据库可以保存在硬设备上的文件，但也可以不是，究竟数据库是不是文件还是别的什么东西不重要，因为你并不直接访问数据库，而是使用DBMS去访问数据库。</p><h4 id="1-1-3-什么是数据库系统（DataBase-System）"><a href="#1-1-3-什么是数据库系统（DataBase-System）" class="headerlink" title="1.1.3 什么是数据库系统（DataBase System）"></a>1.1.3 什么是数据库系统（DataBase System）</h4><p><strong>数据库系统是指在计算机系统中引入数据库后的系统，由数据库、数据库管理员及其管理软件组成的系统，</strong>包含了数据库、数据库管理系统、应用系统、数据库管理员，数据库开发工具。</p><p><img alt data-src="https://img-blog.csdnimg.cn/20191220173850467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTgwMDg4NA==,size_16,color_FFFFFF,t_70"></p><h4 id="1-1-4-什么是概念模型"><a href="#1-1-4-什么是概念模型" class="headerlink" title="1.1.4 什么是概念模型"></a>1.1.4 什么是概念模型</h4><p>概念模型就是<strong>在了解用户的需求，用户的业务领域工作情况以后，经过分析和总结，提炼出来的用以描述用户业务需求的一些概念的东西。</strong>如销售业务中的“客户”和“定单”，还有就是“商品”，“业务员”。</p><p>实体（Entity）是客观存在并可以互相区分的事物，从具体的人，物，事件到抽象的状态与概念都可以用实体抽象地表示。比如一个人，一个学生。</p><p>属性（Attribute） 是实体所具有的某些特性。由属性组成实体，通过属性对实体进行描述。比如一个人的名字。</p><p>码（Key）：如果有一个属性或者属性集能够唯一地标识每一个实体，则称该属性或属性集为该实体的码。比如一个人的身份证，学生的学号。</p><h4 id="1-1-5-什么是数据模型"><a href="#1-1-5-什么是数据模型" class="headerlink" title="1.1.5 什么是数据模型"></a>1.1.5 什么是数据模型</h4><p>数据模型是对客观事物及联系的数据描述，是概念模型的数据化，即数据模型提供表示和组织数据的方法。</p><h4 id="三种数据模型：层次模型，网状模型，关系模型。（了解，详细看《数据库系统概论》）"><a href="#三种数据模型：层次模型，网状模型，关系模型。（了解，详细看《数据库系统概论》）" class="headerlink" title="三种数据模型：层次模型，网状模型，关系模型。（了解，详细看《数据库系统概论》）"></a>三种数据模型：层次模型，网状模型，关系模型。（了解，详细看《数据库系统概论》）</h4><ol><li>层次模型：用树形结构来表示各类实体以及实体间的联系，每一个结点表示一个记录，结点之间的连接表示记录间的关系，这种联系只能是父子联系。</li><li>网状模型：是一种比层次模型更具普遍性的结构，它允许多个结点没有双亲结点，也允许一个结点有多个双亲结点，因此网状模型可以方便地表示各种类型的联系。一般来说，层次模型是网状模型的特殊形式，网状模型是层次模型的一般形式。</li></ol><h4 id="1-1-6-关系模型（重要）"><a href="#1-1-6-关系模型（重要）" class="headerlink" title="1.1.6 关系模型（重要）"></a>1.1.6 关系模型（重要）</h4><p>网状和层次模型很好解决了数据集中和共享问题，但是在数据的独立性和抽象级别上仍有很大缺陷，用户在对这两种数据模型进行存取时仍需要明确数据的存储结构，指出存取路径，然后就出现了关系模型。</p><p><strong>关系模式是用二维表格结构表示实体及实体间的联系的数据模型。</strong>标准数据查询语言SQL就是一种基于关系数据库的语言，这种语言执行对关系数据库中数据的检索和操作。像MySQL，Oracle等属于关系型数据库。</p><h4 id="1-1-7-非关系模型（参考百度百科）（NoSQL-No-Only-SQL）"><a href="#1-1-7-非关系模型（参考百度百科）（NoSQL-No-Only-SQL）" class="headerlink" title="1.1.7 非关系模型（参考百度百科）（NoSQL No Only SQL）"></a>1.1.7 非关系模型（参考百度百科）（NoSQL No Only SQL）</h4><p><strong>指的是分布式的、非关系型的、不保证遵循ACID原则的数据存储系统。</strong></p><p>NoSQL数据库适合追求速度和可扩展性、业务多变的应用场景。  对于非结构化数据的处理更合适，如文章、评论，这些数据如全文搜索、机器学习通常只用于模糊处理，并不需要像结构化数据一样，进行精确查询，而且这类数据的数据规模往往是海量的，数据规模的增长往往也是不可能预期的，而NoSQL数据库的扩展能力几乎也是无限的，所以NoSQL数据库可以很好的满足这一类数据的存储。</p><p>目前NoSQL数据库仍然没有一个统一的标准，它现在有四种大的分类：<br>（1）<strong>键值对存储（key-value）</strong>：代表软件Redis，它的优点能够进行数据的快速查询，而缺点是需要存储数据之间的关系。<br>（2）列存储：代表软件Hbase，它的优点是对数据能快速查询，数据存储的扩展性强。而缺点是数据库的功能有局限性。<br>（3）<strong>文档数据库存储</strong>：代表软件MongoDB，它的优点是对数据结构要求不特别的严格。而缺点是查询性的性能不好，同时缺少一种统一查询语言。<br>（4）图形数据库存储：代表软件InfoGrid，它的优点可以方便的利用图结构相关算法进行计算。而缺点是要想得到结果必须进行整个图的计算，而且遇到不适合的数据模型时，图形数据库很难使用。  </p><p>ACID原则：指数据库事务正确执行的四个基本要素的缩写。包含：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。一个支持事务（Transaction）的数据库，必须要具有这四种特性，否则在事务过程（Transaction processing）当中无法保证数据的正确性，交易过程极可能达不到交易方的要求。</p><h4 id="1-1-8-关系模型与非关系模型"><a href="#1-1-8-关系模型与非关系模型" class="headerlink" title="1.1.8 关系模型与非关系模型"></a>1.1.8 关系模型与非关系模型</h4><p><a href="zhihu.com/question/24225007">参考</a><br>非关系型数据库的优势：</p><ol><li>性能<br>NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。</li><li>可扩展性<br>同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。</li></ol><p>关系型数据库的优势：</p><ol><li>复杂查询<br>可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。</li><li>事务支持<br>使得对于安全性能很高的数据访问要求得以实现。</li></ol><h4 id="1-1-9-表（Table）"><a href="#1-1-9-表（Table）" class="headerlink" title="1.1.9 表（Table）"></a>1.1.9 表（Table）</h4><p>把数据库看成文件柜，那么如果在存放资料时，并不是将它们随便扔进文件柜的某个抽屉，而是在某个抽屉贴上特定的标签，然后把资料存放进该特定的抽屉中。</p><p>该抽屉在数据库在领域中被称为表。==表是一种结构化的文件，可用来存储某种特定类型的数据==。比如保存顾客清单，产品目录等。下面就是一张表。</p><p><img alt data-src="https://img-blog.csdnimg.cn/20191219231939899.png"></p><p>表具有一些特性，这些特性定义了数据在表中如何存储，如可以存储什么样的数据（类型），数据如何分解（看下面列中的解释），各部分信息如何命名等。描述表的这组信息就是所谓的模式（Schema），模式可以用来描述数据库中特定的表以及整个数据库（和其中表的关系），<a href="https://blog.csdn.net/weixin_41800884/article/details/103625048" target="_blank" rel="external nofollow noopener noreferrer">详细请看</a>。</p><h4 id="1-1-10-列（Column）和数据类型"><a href="#1-1-10-列（Column）和数据类型" class="headerlink" title="1.1.10 列（Column）和数据类型"></a>1.1.10 列（Column）和数据类型</h4><p><strong>列是表中的一个字段，是某一个事物的一个特征。</strong>所有的表都是由一个或多个列组成的。列也可以称为属性。</p><blockquote><p>解释一下数据分解：正确的把数据分解为多个列极为重要，例如城市，省，邮政编码应该总是独立的列。通过将它分解开，才有可能利用特定的列对数据进行排序和过滤。如果城市和省组合在一个列中，则如果按照省进行排序或者过滤很困难。</p></blockquote><p><strong>数据类型是指所容许的数据的类型。</strong></p><p><img alt data-src="https://img-blog.csdnimg.cn/20191219231947222.png"></p><h4 id="1-1-11-行（Row）"><a href="#1-1-11-行（Row）" class="headerlink" title="1.1.11 行（Row）"></a>1.1.11 行（Row）</h4><p><strong>行指的是表中的一个记录（元组），事物特征的组合，可以描述一个具体的事物。</strong>例如学号是什么，名字是什么等这些。提到行时称其为数据库记录，这两个术语可以互相代替。但从技术上说，行才是正确的术语。</p><p><strong>表就是记录的组合，表示同一类事物的组合。</strong></p><p><img alt data-src="https://img-blog.csdnimg.cn/20191219231953658.png"></p><blockquote><p>目前先从关系型数据库学起</p></blockquote><h2 id="1-2-关系键"><a href="#1-2-关系键" class="headerlink" title="1.2 关系键"></a>1.2 关系键</h2><h4 id="1-2-1-主键（Primary-Key）"><a href="#1-2-1-主键（Primary-Key）" class="headerlink" title="1.2.1 主键（Primary Key）"></a>1.2.1 主键（Primary Key）</h4><p><strong>表中每一行都应该有可以唯一标识自己的一列（或一组列），这就是主键。</strong> 每个表虽然不总是都需要主键，但是大多数数据库设计人员都应保证他们创建的每个表至少具有一个主键。</p><p>表中的任何列都可以作为主键，只要满足以下条件：</p><ol><li><p>任意两行都不具有相同的主键值。</p></li><li><p>每个行都必须具有一个主键值（主键列不允许NULL值） 。</p></li></ol><blockquote><p>主键的最好习惯：除了MySQL强制实施的规则外，应该坚持的几个普遍认可的最好习惯：</p><ul><li>不更新主键列中的值；</li><li>不重用主键列的值；</li><li>不在主键列中使用可能会更改的值。</li></ul></blockquote><h4 id="1-2-2-超键（Super-Key）"><a href="#1-2-2-超键（Super-Key）" class="headerlink" title="1.2.2 超键（Super Key）"></a>1.2.2 超键（Super Key）</h4><p><strong>在关系中能唯一标识元组的属性集称为超键。</strong> 比如学生表可能有学号和身份证的字段，那么它们两的组合或者含有它们两者之一的都是超键。比如（学号，姓名），（学号，身份证）等。</p><h4 id="1-2-3-候选键"><a href="#1-2-3-候选键" class="headerlink" title="1.2.3 候选键"></a>1.2.3 候选键</h4><p><strong>候选键是不含有多余属性的超键，属性最小的超键。</strong> 比如（学号）、（身份证）。</p><h4 id="1-2-4-外键"><a href="#1-2-4-外键" class="headerlink" title="1.2.4 外键"></a>1.2.4 外键</h4><p><strong>如果一张表中的某个字段是在另一张表作为主键，那么该字段就是外键。</strong> 比如辅导员这个字段，就有可能有一张辅导员信息表来记录辅导员的信息。</p><p><img alt data-src="https://img-blog.csdnimg.cn/20191219232001458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTgwMDg4NA==,size_16,color_FFFFFF,t_70"></p>]]></content>
    
    <summary type="html">
    
      数据库基础，了解一些概念
    
    </summary>
    
    
      <category term="数据库" scheme="https://flunggg.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://flunggg.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>POJO类中布尔类型的变量都不要加is前缀详解</title>
    <link href="https://flunggg.cn/archives/8fcf5eec.html"/>
    <id>https://flunggg.cn/archives/8fcf5eec.html</id>
    <published>2020-01-07T15:28:56.000Z</published>
    <updated>2020-01-10T03:02:51.343Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对应阿里巴巴开发手册第一章的命名风格的第八条。</p><p><strong>【强制】</strong> POJO类中布尔类型的变量都不要加is前缀，否则部分框架解析会引起序列化错误。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">反例：定义为基本数据类型Boolean isDeleted; 的属性，它的方法名称也是 isDeleted()，</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">RPC框架在反向解析的时候，“误以为”对应的属性名称是deleted，导致属性获取不到抛出异常。</span></pre></td></tr></table></figure><p>我对这个反例感觉有点怪怪的，基本数据类型Boolean？而且Boolean生成的getter方法是getXxx()，boolean生成的getter方法是isXxx()，疑惑，不知道是不是手册写错了还是我错了。</p><p>我认为这条很重要很重要。<strong>前后端传递数据时，就有可能因为布尔类型变量的命名，导致前后端传送数据时传递失败。</strong>因为这个布尔类型的数据解析不一致，在后端该命名是isXxx，而在前端发送表单是传送的数据是isXxx，但是响应时却是Xxx，说明传输到后端时会解析成Xxx（像spring会根据getter和setter来解析POJO类，而当我创建的是isXxx，那么自动生成的getter方法会是isXxx方法，然后解析时会去掉is，所以变成了Xxx），而后端原本是isXxx，导致找不到该属性，所以值也传递不了。</p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200107/20200107233149-309672.png"></p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200107/20200107233159-573377.png"></p><p>所以这是一个致命问题，但是可以避免啊。</p><h2 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h2><p>在Java中布尔类型有基本数据类型和包装类，所以有四种方式来定义一个布尔类型的变量：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Boolean isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Boolean live;</span></pre></td></tr></table></figure><p>首先来总结上面的区别：</p><ol><li>四种中有两种是boolean，而另外两种是Boolean。可不要傻乎乎的说这两个类型是一样的，正确的是它们是有区别的。</li><li>四种中有两种变量名是以is开头，另外两种没有。</li></ol><hr><p>先根据手册，可得布尔类型的变量命名不使用以is开头的。为什么？</p><p>来看看下面代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// boolean isLive</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLive</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLive</span><span class="params">(<span class="keyword">boolean</span> live)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        isLive = live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// boolean live</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLive</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLive</span><span class="params">(<span class="keyword">boolean</span> live)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.live = live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Boolean isLive</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> Boolean isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">getLive</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLive</span><span class="params">(Boolean live)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        isLive = live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// Boolean live</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> Boolean live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">getLive</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLive</span><span class="params">(Boolean live)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.live = live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>噫，通过代码和idea自动生成的getter和setter方法，可得到：</p><ol><li>boolean类型的getter方法是isXxx()的形式。</li><li>Boolean类型的getter方法是getXxx()的形式。</li><li>这两个类型的setter方法相同。</li></ol><p>其实isXxx()方法和getXxx()都是一样的，都是会解析成Xxx，但是只有布尔类型才有isXxx()方法，所以两种可以互换。比如把Boolean类型的getXxx改成isXxx，或者把boolean类型的isXxx改成getXxx。</p><p>一般情况下，其实布尔类型使用isXxx或不使用没有区别，但是在序列化时才可以看到区别，特别是现在开发中，都是序列化或者自动序列化的，所以可能因为命名的问题导致错误。</p><p>现在就先解决使用isXxx和使用Xxx的问题，我们拿常用的JSON序列化举例，比如看看fastJson、jackson和Gson之间有何区别：（还好参考了别人的博文不然我自己举的例子只是fastJson，有参考地址）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// boolean isLive</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People1</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLive</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLive</span><span class="params">(<span class="keyword">boolean</span> live)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        isLive = live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// boolean live</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People2</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLive</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLive</span><span class="params">(<span class="keyword">boolean</span> live)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.live = live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PeopleTest</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        ObjectMapper jackson = <span class="keyword">new</span> ObjectMapper();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        People1 people1 = <span class="keyword">new</span> People1();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        people1.setLive(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"boolean isLive"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"fastJson："</span> + JSON.toJSONString(people1));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"jackson："</span> + jackson.writeValueAsString(people1));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"Gson："</span> + gson.toJson(people1));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        People2 people2 = <span class="keyword">new</span> People2();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        people2.setLive(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"boolean live"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"fastJson："</span> + JSON.toJSONString(people2));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"jackson："</span> + jackson.writeValueAsString(people2));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"Gson："</span> + gson.toJson(people2));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>去maven仓库访问速度有时太慢了，所以下面提供了fastJson、jackson和Gson的仓库链接，自己拿去耍耍。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.58<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.google.code.gson/gson --&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">boolean isLive</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">fastJson：&#123;&quot;live&quot;:true&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">jackson：&#123;&quot;live&quot;:true&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Gson：&#123;&quot;isLive&quot;:true&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">boolean live</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">fastJson：&#123;&quot;live&quot;:true&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">jackson：&#123;&quot;live&quot;:true&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Gson：&#123;&quot;live&quot;:true&#125;</span></pre></td></tr></table></figure><p>根据这些结果就可以得出：</p><ol><li>使用布尔类型的变量命名为isXxx，fastJson和jackson在把对象序列化成json字符串时，是通过反射遍历出该类中的<strong>所有getter方法(或isXxx方法)</strong>，得到isLive()方法，然后根据JavaBean规范，它会认为这是live属性，然后序列化成json。</li><li>而Gson并不是这么做的，他是通过反射遍历该类中的<strong>所有属性</strong>，并把其值序列化成json。</li></ol><p>可得由于不同的序列化工具，在进行序列化的时候使用到的策略是不一样的，所以，对于同一个类的同一个对象的序列化结果可能是不同的。 </p><p>现在，不同的序列化框架得到的json内容并不相同，如果对于同一个对象，我使用fastjson进行序列化，再使用Gson反序列化会发生什么？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// boolean isLive</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People1</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLive</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> isLive;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLive</span><span class="params">(<span class="keyword">boolean</span> live)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        isLive = live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"People1&#123;"</span> +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                <span class="string">"isLive="</span> + isLive +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                <span class="string">'&#125;'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// boolean live</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People2</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLive</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLive</span><span class="params">(<span class="keyword">boolean</span> live)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">this</span>.live = live;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="string">"People2&#123;"</span> +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">                <span class="string">"live="</span> + live +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">                <span class="string">'&#125;'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PeopleTest</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        People1 people1 = <span class="keyword">new</span> People1();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        people1.setLive(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        People2 people2 = <span class="keyword">new</span> People2();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">        people2.setLive(<span class="keyword">true</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"boolean isLive::"</span> + gson.fromJson(JSON.toJSONString(people1), People1<span class="class">.<span class="keyword">class</span>))</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">"boolean live::"</span> + gson.fromJson(JSON.toJSONString(people2), People2<span class="class">.<span class="keyword">class</span>))</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>结果：</p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20200110/20200110110246-778766.png"></p><p>会发现，在People1类中已经把isLive设置成true，现在怎么变成false？</p><p>原因是因为JSON框架通过扫描所有的getter后发现有一个isLive方法，然后根据JavaBeans的规范，解析出变量名为live，把model对象序列化城字符串后内容为{“live”: true}。<br>然后根据{“live”: true}这个json串，Gson框架在通过解析后，通过反射寻找Model类中的live属性，但是Model类中只有isLive属性，找不到对应的属性，所以，最终反序列化后的Model类的对象中，isLive则会使用默认值false。</p><p>所以这样会导致前台的布尔类型的数据传送不到后端，因为前端传过来的会把命名为isXxx的变量解析成Xxx，而我们POJO类中的布尔类型的属性是isXXX，导致在POJO类中找不到Xxx，所以就导致传递值失败。我们必须避免这样的致命问题。</p><p>最终，解释了：<em>POJO类中布尔类型的变量都不要加is前缀</em>。</p><hr><p>下面再来解释，是使用Boolean类型还是使用boolean。这里可以看开发手册 <em>1.4 OOP规约的第11条</em>。</p><blockquote><p>所有的POJO类属性必须使用包装数据类型。<br>RPC方法的返回值和参数必须使用包装数据类型。<br>所有的局部变量使用基本数据类型。</p></blockquote><p>为什么？</p><p>很简单，看这两种类型的区别，boolean类型的默认值为false；而Boolean类型的默认值是null。</p><p>举个栗子：<strong>在学校考试的时候，我们要录入学生成绩，假设使用Integer类型来录入，那么学生要是没有来考试，那么该成绩就是null，学生考0分，说明学生有来考试，但是考了0分；使用int类型来录入，注意int类型默认值为0，那么成绩如果是0，我们不能确定该学生是没有来考试的呢？还是有来考试但考了0分。</strong></p><p>参考：<br><a href="https://blog.csdn.net/u011732080/article/details/102853470" target="_blank" rel="external nofollow noopener noreferrer">为什么阿里巴巴开发手册强制规定POJO 类中布尔类型的变量，都不要加 is 前缀</a></p>]]></content>
    
    <summary type="html">
    
      POJO类中布尔类型的变量都不要加is前缀
    
    </summary>
    
    
      <category term="阿里巴巴" scheme="https://flunggg.cn/categories/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/"/>
    
    
      <category term="阿里巴巴" scheme="https://flunggg.cn/tags/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/"/>
    
  </entry>
  
  <entry>
    <title>2019，拜拜</title>
    <link href="https://flunggg.cn/archives/57060d65.html"/>
    <id>https://flunggg.cn/archives/57060d65.html</id>
    <published>2019-12-31T09:29:58.000Z</published>
    <updated>2019-12-31T12:39:44.639Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈"><a href="#浅谈" class="headerlink" title="浅谈"></a>浅谈</h2><p>今年大三，可能是我学得最多的一年吧，懂得确确实实比以前多，开始有着自己的思想，即使还不是很完善。</p><p>一路下来，我发现我的弯路真的多，当初没有那么坚定我的方向，不懂哪门技术的需要认真学，哪门技术只需要过一遍，不用深究。现在还是后悔大一把C++学那么久，但是C++的精华最后也没有学到。</p><p>直到大三，才开始跟着how2j站长仿作了一个天猫项目，算是我第一个项目吧，都是最最基础的框架东西，刚开始遇到完全没有学过的前端Vue框架，花了些时间去学Vue基础，当然还有在做项目的过程中也顺便跟着学了Redis，Shiro，ElasticSearch这些中间件。</p><h2 id="遗憾"><a href="#遗憾" class="headerlink" title="遗憾"></a>遗憾</h2><p>1.蓝桥杯今年只是拿了省三，说真的，有些失望，说到底还是自己没好好去刷题，自以为学了点算法知识可以上战场，但是没去应用，去刷题，刷得其实也少。</p><p>2.大二下学期，玩了流放之路，玩疯了，那几个星期就像疯子一样，天天玩到很晚，一下课就回宿舍玩玩玩，还充了两三百。我很后悔碰这类会沉迷的游戏，这几个星期足够我去搞某门技术了，像现在已经两个月没用碰游戏了，刚开学还有玩。虽然嘴上说着劳逸结合，所以再也不碰那些会沉迷的游戏，要玩就玩休闲游戏，偶尔来真正的放松。</p><h2 id="高兴"><a href="#高兴" class="headerlink" title="高兴"></a>高兴</h2><p>值得一说的是软考中级过了，虽然不是什么厉害的证书，但也算类似一个steam的小成就。</p><p>也有自己坚定的方向，就是搞Java后端，再也不是当初那个被人牵着走的小白。</p><h2 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h2><p>1.今年就得好好把框架运用熟练，最好了解某部分源码。</p><p>2.2019看的书不多，今年也得好好加强，买了那么多书。</p><p>3.现在还没学的：《设计模式》《JVM》《Linux》</p><p>4.需要加强的：《数据库》、《算法》、《计算机网络》、《操作系统》、《软件工程》虽然学了，但某些课老师讲的真听不懂(PPT)，需要重新再系统过一遍，写个系列博文。这学期讲了《数据库》《操作系统》，那就先搞定他们。</p><p>5.今年3月分，一定一定要拿省一，有方法的刷题。</p><p>6.大四终于争取到没有课，暑假就得去找个实习锻炼锻炼自己，毕竟真正实战比起自己摸东模西学得多学得快，然后就得用上面几门计算机基础去秋招。</p>]]></content>
    
    <summary type="html">
    
      每年都要说一句，时间真的快，转眼又一年
    
    </summary>
    
    
      <category term="个人" scheme="https://flunggg.cn/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
      <category term="个人" scheme="https://flunggg.cn/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>hexo4-NexT7搭建博客(七)</title>
    <link href="https://flunggg.cn/archives/6b104b4e.html"/>
    <id>https://flunggg.cn/archives/6b104b4e.html</id>
    <published>2019-12-28T16:02:39.000Z</published>
    <updated>2019-12-31T09:07:12.512Z</updated>
    
    <content type="html"><![CDATA[<p>我们必须把我们的网站推送到搜索引擎那， 不然别人除了输入我们的域名，是没法发现我们的博文。</p><p>如何查看我的网站是否被收录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">site:你的网站</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">比如我的：site:flunggg.cn</span></pre></td></tr></table></figure><p>如果出现文章就有，没有就是没有。</p><h2 id="1-站点地图"><a href="#1-站点地图" class="headerlink" title="1. 站点地图"></a>1. 站点地图</h2><p>站点地图即<a href="https://link.jianshu.com/?t=https://baike.baidu.com/item/sitemap/6241567?fr=aladdin" target="_blank" rel="external nofollow noopener noreferrer">sitemap</a>， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。</p><h2 id="2-生成站点地图"><a href="#2-生成站点地图" class="headerlink" title="2. 生成站点地图"></a>2. 生成站点地图</h2><p>安装百度和Google的站点地图生成插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span></pre></td></tr></table></figure><p>然后来到站点目录配置文件<code>_config.yml</code>，在下面添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 站点地图</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">baidusitemap:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span></pre></td></tr></table></figure><p>然后重新推送到服务器，在访问如下URL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;你的域名&#x2F;sitemap.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;你的域名&#x2F;baidusitemap.xml</span></pre></td></tr></table></figure><p>看看有没有出现代码。有的话就成功。</p><h2 id="3-百度收录"><a href="#3-百度收录" class="headerlink" title="3.百度收录"></a>3.百度收录</h2><h3 id="3-1-百度站长"><a href="#3-1-百度站长" class="headerlink" title="3.1 百度站长"></a>3.1 百度站长</h3><p>通过百度站长平台进行链接提交，增加网站的索引量。先去注册并登录：<a href="https://ziyuan.baidu.com/?castk=LTE%3D" target="_blank" rel="external nofollow noopener noreferrer">百度站长平台</a></p><p>然后如下图：</p><p><img alt="1" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122900/20191229001024-355538.png"></p><p><img alt="2" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122900/20191229001031-449605.png"></p><p><img alt="3" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122900/20191229001037-231974.png"></p><p>我选择的是<code>https://</code>，这根据你前面是否添加SSL证书来选择。并且我使用的是不带www的，看个人。然后到第三步，我喜欢用CNAME验证，就是到域名解析那添加个映射。</p><p><img alt="4" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122900/20191229003649-19150.png"></p><h3 id="3-2-链接提交"><a href="#3-2-链接提交" class="headerlink" title="3.2 链接提交"></a>3.2 链接提交</h3><p>百度站长平台的链接提交方式分为自动提交和手动提交两种，此处只讲自动提交，手动提交按照要求操作即可。</p><h4 id="3-2-1-主动推送"><a href="#3-2-1-主动推送" class="headerlink" title="3.2.1 主动推送"></a>3.2.1 主动推送</h4><p>主动推送最为快速的提交方式，是被百度收录最快的推送方式。主动推送可以通过安装插件实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span></pre></td></tr></table></figure><p>然后到站点目录配置文件<code>_config.yml</code>，添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主动推送百度，被百度收录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">count:</span> <span class="number">10</span> <span class="comment"># 提交最新的10个链接</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">host:</span>  <span class="comment"># 百度站长平台中注册的域名</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">token:</span>  <span class="comment"># 秘钥，百度站长平台 &gt; 推送接口 &gt; 接口调用地址中token字段</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里，不用改</span></span></pre></td></tr></table></figure><p><img alt="5" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122902/20191229025916-585899.png"></p><p>其次，记得查看<code>_config.yml</code>文件中url的值， 必须包含是百度站长平台注册的域名， 比如:我的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># URL</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">url: https:&#x2F;&#x2F;flunggg.cn&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">root: &#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">permalink: archives&#x2F;:abbrlink.html</span></pre></td></tr></table></figure><p>最后，加入新的deployer:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">- type: git ## 这是我原来的deployer</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  repo:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  branch:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">- type: baidu_url_submitter ## 添加这里内容即可</span></pre></td></tr></table></figure><p>其主动推送的实现原理如下：</p><ul><li>新链接的产生， <code>hexo generate</code> 会产生一个文本文件，里面包含最新的链接</li><li>新链接的提交， <code>hexo deploy</code> 会从上述文件中读取链接，提交至百度搜索引擎</li></ul><h4 id="3-2-2-自动推送"><a href="#3-2-2-自动推送" class="headerlink" title="3.2.2 自动推送"></a>3.2.2 自动推送</h4><p>可以在<code>themes\next\layout\_third-party</code>中看到一个baidu-push.swig文件，这应该是现在next版本自带的。所以就不用配置了。如果没有则，在此目录下创建一个名为：baidu-push.swig文件。然后添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme.baidu_push %&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  &lt;script&#123;&#123; pjax &#125;&#125;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      bp.src = (curProtocol === <span class="string">'https'</span>) ? <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span> : <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">      s.parentNode.insertBefore(bp, s);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;)();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  &lt;<span class="regexp">/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">&#123;%- endif %&#125;</span></span></pre></td></tr></table></figure><h4 id="3-3-3-sitemap提交"><a href="#3-3-3-sitemap提交" class="headerlink" title="3.3.3 sitemap提交"></a>3.3.3 sitemap提交</h4><p>也叫手动推送。把下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;你的域名&#x2F;sitemap.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;你的域名&#x2F;baidusitemap.xml</span></pre></td></tr></table></figure><p>复制粘贴到这里，然后提交。我的结果就在下面，显示成功。</p><p><img alt="6" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122900/20191229003550-704359.png"></p><p>注意：百度站长的HTTPS认证先不理，我当初配置完，总是HTTPS认证失败，就是因为站内还有http的链接，但是做了http转htpps也不能。现在突然看到成功了，也许是在服务器那边把http给关了。并且百度站长收录网站很慢很慢，大概半个月后才收录网站。而且我的过了一个星期才有推送数据。刚开始怎么推送都没有。现在才有。但是还是没看到我的文章。</p><p><img alt="7" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122900/20191229003645-587488.png"></p><h2 id="4-谷歌收录"><a href="#4-谷歌收录" class="headerlink" title="4. 谷歌收录"></a>4. 谷歌收录</h2><p>提交谷歌搜索引擎比较简单，在提交之前，我们依然可以使用 <code>site:域名</code> 查看网站是否被收录，谷歌爬虫的确是强大，即使没有提交过，我现在也可以看到我的文章。牛逼！！不像某某推送这么久没效果。</p><p><img alt="8" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122900/20191229005043-463018.png"></p><p>进入<a href="https://www.google.com/webmasters/#?modal_active=none" target="_blank" rel="external nofollow noopener noreferrer">谷歌站长</a>，登录你的谷歌账号。然后如下操作，要是第一次就弹出一个让你输入域名的提示框，就直接输入你要收录的网站域名就行。</p><p><img alt="9" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019123117/20191231170655-456946.png"></p><p><img alt="10" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122900/20191229005435-133975.png"></p><p>我是选择第一个。然后需要等待一天。</p><p>然后还需要验证，下面的图我是借来的，因为我已经验证好了。复制那条TXT记录，然后到域名解析那里，使用TXT来映射。</p><p><img alt="11" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229010850-311092.png"></p><p><img alt="12" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229011040-65121.png"></p><p>你也可以下载个HTML文件然后放在站点目录下的source中，然后推送到服务器。</p><p>输入完就不用去理了。第二天会自动收录。</p><h2 id="5-必应收录"><a href="#5-必应收录" class="headerlink" title="5. 必应收录"></a>5. 必应收录</h2><p>必应收录也是很简单，点击<a href="https://www.bing.com/webmaster/home/mysites" target="_blank" rel="external nofollow noopener noreferrer">必应站长</a>。先注册登录，必应收录有两种方式，一种使用刚刚谷歌导入过去，第二种是就是自己添加URL</p><p><img alt="13" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229011600-898298.png"></p><p>然后就不用理，不过必应也收录也比较慢，到现在才收录我的首页而已，但是比百度快。</p>]]></content>
    
    <summary type="html">
    
      搭建博客系列(七) 百度，必应，谷歌收录。
    
    </summary>
    
    
      <category term="hexo" scheme="https://flunggg.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://flunggg.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo4-NexT7搭建博客(六)</title>
    <link href="https://flunggg.cn/archives/f41853c4.html"/>
    <id>https://flunggg.cn/archives/f41853c4.html</id>
    <published>2019-12-28T08:39:23.000Z</published>
    <updated>2019-12-28T18:11:05.508Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-域名绑定"><a href="#1-域名绑定" class="headerlink" title="1. 域名绑定"></a>1. 域名绑定</h2><h3 id="1-1-GitHub仓库的域名绑定"><a href="#1-1-GitHub仓库的域名绑定" class="headerlink" title="1.1 GitHub仓库的域名绑定"></a>1.1 GitHub仓库的域名绑定</h3><ul><li>如果一直打算把博客部署在GitHub上，默认就是部署在这里，那么我们来绑定一下域名。</li></ul><p>首先先去买个域名，<a href="https://wanwang.aliyun.com/" target="_blank" rel="external nofollow noopener noreferrer">阿里云的万网</a>（我是在这个搞的），<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="external nofollow noopener noreferrer">腾讯云</a>、<a href="https://cloud.baidu.com/product/bcd.html" target="_blank" rel="external nofollow noopener noreferrer">百度云</a>等都可以，这我在前面很早就有说。</p><p>打开你部署在github的博客仓库，然后点击Settings，看到Repository name，复制下面那个。</p><p><img alt="1" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122816/20191228165411-448783.png"></p><p>在阿里云点开你的域名解析：我配置的是@，也就是<a href="http://www.xxx.cn和xxx.cn都可以访问，你可以自己按自己的方式。" target="_blank" rel="external nofollow noopener noreferrer">www.xxx.cn和xxx.cn都可以访问，你可以自己按自己的方式。</a></p><p><img alt="2" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122816/20191228165615-800176.png"></p><p><img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122816/20191228165621-963532.png"></p><p>然后点击左边那个蓝色按钮，添加记录。</p><p><img alt="3" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122816/20191228165625-682867.png"></p><p>然后再回到刚刚的github你博客仓库的setting中，往下拉。</p><p><img alt="4" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122816/20191228165756-585323.png"></p><p>最后，在自己本地的站点目录的source文件中，创建一个CNAME文件，然后在里面填上我们的域名。因为刚开始在github那边填上我们的域名，就会在仓库生成一个CNAME文件，而我们本地博客没有，每次上传时都会把它删了，所以得在本地创建一个这样的文件。</p><p><img alt="5" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122817/20191228170240-899062.png"></p><p>访问试试成功了没有。</p><h3 id="1-2-阿里云的域名绑定"><a href="#1-2-阿里云的域名绑定" class="headerlink" title="1.2 阿里云的域名绑定"></a>1.2 阿里云的域名绑定</h3><p>这个最简单了，提前是自己要有阿里云的服务器或者别的服务器。然后去获取服务器的公网IP地址。比如：我的阿里云服务器的公网。</p><p><img alt="6" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122817/20191228170757-391535.png"></p><p>然后回到刚刚域名解析那边，如图：</p><p><img alt="7" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122817/20191228171050-107982.png"></p><p>如果服务器没有装nginx或者tomcat的话，访问不到什么，所以看下一步。</p><h2 id="2-将博客部署到阿里云服务器"><a href="#2-将博客部署到阿里云服务器" class="headerlink" title="2. 将博客部署到阿里云服务器"></a>2. 将博客部署到阿里云服务器</h2><p>这一步我走了很多坑。有时候是githooks不起作用，有时候是nginx问题。</p><h3 id="2-1-本地电脑连接阿里云"><a href="#2-1-本地电脑连接阿里云" class="headerlink" title="2.1 本地电脑连接阿里云"></a>2.1 本地电脑连接阿里云</h3><p><a href="https://blog.csdn.net/weixin_41800884/article/details/103148518" target="_blank" rel="external nofollow noopener noreferrer">阿里云入门</a></p><p><a href="https://blog.csdn.net/weixin_41800884/article/details/103148850" target="_blank" rel="external nofollow noopener noreferrer">阿里云本地SSH连接</a></p><p>这里额外补充，可以下载一个<a href="https://winscp.net/eng/docs/lang:chs" target="_blank" rel="external nofollow noopener noreferrer">WinSCP</a>的可视连接程序。</p><h3 id="2-2-安装nginx"><a href="#2-2-安装nginx" class="headerlink" title="2.2 安装nginx"></a>2.2 安装nginx</h3><p>最好跟我安装一样版本的nginx。看下面的博文，也有某些nginx出错的解决方法。</p><p><a href="https://blog.csdn.net/weixin_41800884/article/details/103545128" target="_blank" rel="external nofollow noopener noreferrer">安装nginx</a></p><p>然后访问公网ip看看有没有出现什么，有出现nginx的首页就说明成功。</p><h3 id="2-3-博客部署到阿里云服务器"><a href="#2-3-博客部署到阿里云服务器" class="headerlink" title="2.3 博客部署到阿里云服务器"></a>2.3 博客部署到阿里云服务器</h3><h4 id="2-3-1-原理"><a href="#2-3-1-原理" class="headerlink" title="2.3.1 原理"></a>2.3.1 原理</h4><p>在本地编辑文本，然后使用Git远程部署到VPS的Git仓库。<code>hexo d</code>命令实际上只deploy了本地的public文件夹，Git Hooks实际上就是当Git仓库收到最新的push时，将Git仓库接受到的内容复制到VPS上的网站目录内。相当于完成了手动将public文件夹复制到VPS的网站根目录里。</p><p>下面这张是用别人的图，该原理就是这样：<a href="https://segmentfault.com/a/1190000016106584" target="_blank" rel="external nofollow noopener noreferrer">原地址</a></p><p><img alt="8" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122819/20191228193136-962690.png"></p><h4 id="2-3-2-安装配置Git"><a href="#2-3-2-安装配置Git" class="headerlink" title="2.3.2 安装配置Git"></a>2.3.2 安装配置Git</h4><p>连接上我们的远程阿里云服务器，然后执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo yum install git</span></pre></td></tr></table></figure><p>等待下载，查看是否成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git --version</span></pre></td></tr></table></figure><h4 id="2-3-3-创建git用户以及配置免密登录"><a href="#2-3-3-创建git用户以及配置免密登录" class="headerlink" title="2.3.3 创建git用户以及配置免密登录"></a>2.3.3 创建git用户以及配置免密登录</h4><ul><li>创建一个名为git的用户。不是我们github上的那个git用户。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">adduser git</span></pre></td></tr></table></figure><p>假如没有提示输入密码,则</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">passwd git</span></pre></td></tr></table></figure><p>输入自定义密码，以后登录该名为git的用户要用的。</p><ul><li>然后，赋给git用户sudo权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">chmod 740 /etc/sudoers</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">vim /etc/sudoers</span></pre></td></tr></table></figure><p>找到如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> User privilege specification</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">root    ALL=(ALL:ALL) ALL</span></pre></td></tr></table></figure><p>然后在root下面添加：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> User privilege specification</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">root    ALL=(ALL:ALL) ALL</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">git     ALL=(ALL:ALL) ALL</span></pre></td></tr></table></figure><p>然后按下ESC键，加上 ; 再输入wq保存退出。这应该不用我说了，vim编译器的指令。</p><p>然后修改回文件的权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">chmod 440 /etc/sudoers</span></pre></td></tr></table></figure><ul><li>切换到git用户</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">su git// 切换到git用户</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">cd /home/git// 切换到git用户目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">mkdir -p repo/myblog.git// 创建git仓库文件夹，以myblog.git为例</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">cd repo/myblog.git// 切换到repo目录,进入仓库目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">git init --bare// 使用--bare参数初始化为裸仓库，这样创建的仓库不包含工作区</span></pre></td></tr></table></figure><p>创建网站目录shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd /home/git // 切换到git用户目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mkdir -p hexo/blog// 创建目录，用来存放博客的静态文件</span></pre></td></tr></table></figure><ul><li>配置ssh</li></ul><p>回到我们的本地主机，假设你电脑已经早有配置git密匙，在桌面右键点开Git Bash，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span></pre></td></tr></table></figure><p>然后就会出现你的git密匙，复制，然后回到远程阿里云服务器，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd &#x2F;home&#x2F;git&#x2F;&#x2F; 切换到git用户目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mkdir .ssh&#x2F;&#x2F;创建.ssh目录</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">cd .ssh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">sudo vim authorized_keys</span></pre></td></tr></table></figure><p>然后对着vim打开的黑框右键一下，就把刚刚复制的密匙复制过去了，但是注意：有可能在最前面有可能会漏掉几个字符，自己填上去。最后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">按ESC，然后按分号键; 输入wq</span></pre></td></tr></table></figure><p><img alt="9" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122819/20191228195944-185026.png"></p><ul><li>确认文件夹的权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo chown git:git -R &#x2F;home&#x2F;hexo&#x2F;blog</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo chown git:git -R &#x2F;home&#x2F;git&#x2F;myblog.git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">#然后查看这两个文件夹是不是都属于git:git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">ll &#x2F;home&#x2F;git&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">ll &#x2F;var&#x2F;www&#x2F;</span></pre></td></tr></table></figure><ul><li>然后,到这里,就先验证vps是否能用git用户ssh免密登陆.在本地windows打开git bash,输入命令登陆</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ssh git@你的服务器的公网ip或者域名</span></pre></td></tr></table></figure><p>首次出现要输入yes。如果有出现要输入密码就成功了，不成功再找我，我在这也走了很多坑。</p><ul><li>然后再配置免密码登录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">chmod 700 ~/.ssh</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">chmod 600 ~/.ssh/authorized_keys</span></pre></td></tr></table></figure><h4 id="2-3-4-配置Nginx"><a href="#2-3-4-配置Nginx" class="headerlink" title="2.3.4 配置Nginx"></a>2.3.4 配置Nginx</h4><p>来到Nginx的目录下的默认配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">vim default.conf</span></pre></td></tr></table></figure><p>如果出现这个，别理，直接按Enter。</p><p><img alt="10" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122820/20191228201653-975400.png"></p><p>然后就出现下面这个： 改两处就行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">server &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    listen  80; # 这里就是要在阿里云开放80端口</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    server_name  flunggg.cn www.flunggg.cn;  # 默认是你的公网，如果有域名填写你的域名，因为我域名解析是@，所以有www和无www都可以，全配上去。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    #charset koi8-r;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    #access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;host.access.log  main;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    return 301 https:&#x2F;&#x2F;$server_name$request_uri; # 以后转https用的</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    location &#x2F; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        root   &#x2F;home&#x2F;git&#x2F;hexo&#x2F;blog&#x2F;; # 改这里</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        index  index.html index.htm;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    error_page  404              &#x2F;404.html;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    # redirect server error pages to the static page &#x2F;50x.html</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    #</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    error_page   500 502 503 504  &#x2F;50x.html;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    location &#x3D; &#x2F;50x.html &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    #</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    #location ~ \.php$ &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    #    proxy_pass   http:&#x2F;&#x2F;127.0.0.1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    #&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    #</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    #location ~ \.php$ &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    #    root           html;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    #    fastcgi_pass   127.0.0.1:9000;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    #    fastcgi_index  index.php;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    #    fastcgi_param  SCRIPT_FILENAME  &#x2F;scripts$fastcgi_script_name;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    #    include        fastcgi_params;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    #&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    # deny access to .htaccess files, if Apache&#39;s document root</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    # concurs with nginx&#39;s one</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    #</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    #location ~ &#x2F;\.ht &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    #    deny  all;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    #&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>然后保存退出。</p><p><strong>这里教一个强制保存退出的，就是在wq加个！。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">按ESC，然后按分号键; 输入wq!</span></pre></td></tr></table></figure><p>这是http的，如果要配置https，加SSL证书看这里，现在都是https的网站我建议配上好。</p><p><a href="https://blog.csdn.net/weixin_41800884/article/details/103545130" target="_blank" rel="external nofollow noopener noreferrer">给博客配置上https</a></p><p>我现在用的是https，也就是有SSL证书，http和https的两个配置文件可以共存，就是需要做http的强制跳转，也就是我上面代码那句。</p><h4 id="2-3-5-配置Git-Hooks"><a href="#2-3-5-配置Git-Hooks" class="headerlink" title="2.3.5 配置Git Hooks"></a>2.3.5 配置Git Hooks</h4><p>简称钩子，我们在本地推送时，即会部署到服务器，也会因为git hooks部署到github存储。</p><p>但是我照着网上的资料配置，没有用。所以我换另一种方式。在下一步。</p><h4 id="2-3-6-本地配置"><a href="#2-3-6-本地配置" class="headerlink" title="2.3.6 本地配置"></a>2.3.6 本地配置</h4><p>最后还需要在站点目录配置文件_config.yml中，找到下面代码：在repo中配置两个，这样就可以推送到两个地方。最后一个type: baidu_url_submitter先别理。主要改的就是repo那三行代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Deployment</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">- type: git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  repo: </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    github: git@github.com:你的github名&#x2F;你的github名.github.io.git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    vps: git@你的域名或者服务器公网IP:&#x2F;home&#x2F;git&#x2F;repo&#x2F;myblog.git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  branch: master</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">- type: baidu_url_submitter</span></pre></td></tr></table></figure><p>最后就可以用你的域名或者公网ip访问博客了，上面配置的github也是可以访问的，但是只拿它来做个存储。</p><h2 id="3-使用gulp压缩资源"><a href="#3-使用gulp压缩资源" class="headerlink" title="3. 使用gulp压缩资源"></a>3. 使用gulp压缩资源</h2><p>在站点目录右键打开Git Bash，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install -d --save gulp gulp-clean gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify</span></pre></td></tr></table></figure><p>等待下载安装，然后在站点目录下创建一个文件：gulpfile.js。然后添上：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//Plugins模块获取</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//压缩css</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-css'</span>,  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">.pipe(minifycss())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">.pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//压缩html</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-html'</span>,  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">.pipe(htmlclean())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">.pipe(htmlmin(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">removeComments: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">minifyJS: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">minifyCSS: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">minifyURLs: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">.pipe(gulp.dest(<span class="string">'./public'</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//压缩js 不压缩min.js</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-js'</span>,  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> gulp.src([<span class="string">'./public/**/*.js'</span>, <span class="string">'!./public/**/*.min.js'</span>])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">.pipe(uglify())</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">.pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// 压缩 public/images 目录内图片(Version&gt;3)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-images'</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params">done</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    gulp.src(<span class="string">'./public/images/**/*.*'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        .pipe(imagemin([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">            imagemin.gifsicle(&#123;<span class="attr">interlaced</span>: <span class="literal">true</span>&#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            imagemin.jpegtran(&#123;<span class="attr">progressive</span>: <span class="literal">true</span>&#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">            imagemin.optipng(&#123;<span class="attr">optimizationLevel</span>: <span class="number">5</span>&#125;),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">            imagemin.svgo(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">                plugins: [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">                    &#123;<span class="attr">removeViewBox</span>: <span class="literal">true</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">                    &#123;<span class="attr">cleanupIDs</span>: <span class="literal">false</span>&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">                ]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">            &#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        ]))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public/images'</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    done();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开始任务</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'default'</span>, gulp.parallel(<span class="string">'minify-html'</span>, <span class="string">'minify-css'</span>,  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// Do something after a, b, and c are finished.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">&#125;));</span></pre></td></tr></table></figure><p>然后以后每次推送得使用四条指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d</span></pre></td></tr></table></figure><h3 id="3-1-一键部署"><a href="#3-1-一键部署" class="headerlink" title="3.1 一键部署"></a>3.1 一键部署</h3><p>在<code>package.json</code>中加入如下<code>script</code>，看清楚，需要一个逗号分隔{}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  &quot;push&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>然后在部署的时候只需要运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm run push</span></pre></td></tr></table></figure><p>参考：</p><p><a href="https://ihaoming.top/archives/c9c37af.html" target="_blank" rel="external nofollow noopener noreferrer">hexo部署到vps</a></p>]]></content>
    
    <summary type="html">
    
      搭建博客系列(六)优化博客
    
    </summary>
    
    
      <category term="hexo" scheme="https://flunggg.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://flunggg.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建博客：写作技巧</title>
    <link href="https://flunggg.cn/archives/6d171bb6.html"/>
    <id>https://flunggg.cn/archives/6d171bb6.html</id>
    <published>2019-12-27T14:46:55.000Z</published>
    <updated>2020-01-13T08:38:32.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Hexo添加文章时自动打开编辑器"><a href="#1-Hexo添加文章时自动打开编辑器" class="headerlink" title="1. Hexo添加文章时自动打开编辑器"></a>1. Hexo添加文章时自动打开编辑器</h2><ul><li><p>首先在站点目录下的scripts目录中创建一个JavaScript脚本文件。如果没有这个scripts目录，则新建一个。</p></li><li><p>scripts目录新建的JavaScript脚本文件可以任意取名。</p></li></ul><p>通过这个脚本，我们用其来监听<code>hexo new</code>这个动作，并在检测到<code>hexo new</code>之后，执行编辑器打开的命令。</p><ul><li>如果你是windows平台的Hexo用户，则将下列内容写入你的脚本：（直接复制，不用改）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  spawn(<span class="string">'start  "markdown编辑器绝对路径.exe" '</span> + data.path);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr></table></figure><ul><li>如果你是Mac平台Hexo用户，则将下列内容写入你的脚本：（直接复制，不用改）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var exec &#x3D; require(&#39;child_process&#39;).exec;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo.on(&#39;new&#39;, function(data)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39; + data.path);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr></table></figure><h2 id="2-新建文章时，在相同目录下创建同名文件夹（便于图片管理）"><a href="#2-新建文章时，在相同目录下创建同名文件夹（便于图片管理）" class="headerlink" title="2. 新建文章时，在相同目录下创建同名文件夹（便于图片管理）"></a>2. 新建文章时，在相同目录下创建同名文件夹（便于图片管理）</h2><ul><li>打开站点配置文件<code>_config.yml</code>，搜索<code>post_asset_folder</code>字段，设置其值为<code>true</code></li><li>安装hexo-asset-image：<code>npm install hexo-asset-image --save</code></li><li>此时<code>hexo new &quot;fileName&quot;</code>会在<code>/source/_posts</code>目录下创建同名的文件夹</li><li>只需在 md 文件里使用 <code>![title](图片名.jpg)</code> ，无需路径名就可以插入图片。但是我们会使用图床，存到这只是为了以后图床失效可以找到图片。</li></ul><h2 id="3-图床"><a href="#3-图床" class="headerlink" title="3. 图床"></a>3. 图床</h2><p>图床有很多，比如阿里云，<a href="https://cloud.tencent.com/" target="_blank" rel="external nofollow noopener noreferrer">腾讯云</a>，<a href="https://www.upyun.com/" target="_blank" rel="external nofollow noopener noreferrer">又拍云</a>等，这些都是可以用的。我使用的是阿里云的OSS来存储图床。</p><p><strong>也可以把图床存在CSDN，从CSDN文章copy过去，但是切记要本地保存，别以后CSDN失效找不到图。</strong></p><p>到<a href="https://oss.console.aliyun.com/" target="_blank" rel="external nofollow noopener noreferrer">阿里云</a>，没注册的先去注册一下。然后如下图：</p><p><img alt="1" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122811/20191228114909-744979.png"></p><ul><li>先去购买流量包，不贵，一年40G才9元。</li></ul><p><img alt="2" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122811/20191228115059-750472.png"></p><p><img alt="3" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122811/20191228115107-460467.png"></p><ul><li>然后去创建一个Bucket，然后如下填入就创建。</li></ul><p><img alt="4" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122811/20191228115459-452228.png"></p><p><img alt="5" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122811/20191228115509-645533.png"></p><ul><li>顺便点开右上角我们的头像，如图：点开AccessKey管理</li></ul><p><img alt="6" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122811/20191228115910-637021.png"></p><ul><li>点开完，出现下面的这个，如果有用户AccessKey就把它的AccessKey ID和Access Key Secret保存到txt，我记得刚创建会自动下载一个文件，该文件就保存这两个键值对。</li><li>如果没有，则创建该用户，然后就会弹出一个下载框下载一个文件。</li></ul><p><img alt="7" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122812/20191228120208-577925.png"></p><p><img alt data-src="/archives/6d171bb6/D:%5Cmyblog%5Cblog%5Csource_posts%5Chexo4-NexT7%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-%E4%BA%94%5C8.png"></p><ul><li>然后先放着，下面的<strong>自动变图床链接的编译器</strong>要用</li></ul><h2 id="4-自动变图床链接的编译器"><a href="#4-自动变图床链接的编译器" class="headerlink" title="4. 自动变图床链接的编译器"></a>4. 自动变图床链接的编译器</h2><p>我是在网上发现一个typora的插件，可以自动把上传的本地连接。</p><p><a href="https://www.lanzous.com/i8brcxg" target="_blank" rel="external nofollow noopener noreferrer">typora下载</a>，也可以去<a href="https://typora.io/" target="_blank" rel="external nofollow noopener noreferrer">官网</a>，但是官网加载好慢。。</p><p><a href="https://github.com/Thobian/typora-plugins-win-img" target="_blank" rel="external nofollow noopener noreferrer">原作者</a>，我fork到<a href="https://github.com/magicflung/typora-plugins-win-img" target="_blank" rel="external nofollow noopener noreferrer">我的github</a>，测试了一下，最新版能够用，下面是我的教程：</p><ul><li>先把该项目下载下来，然后里面有window.html和plugins两个文件。然后我在我的github这样写。</li></ul><p><img alt="8" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122812/20191228122715-350912.png"></p><ul><li>最后，得去配置好我们的图床，在<code>plugins\image</code>的upload.js文件，该文件就是可以配置我们的图床。把刚刚在阿里云下载的文件中，两个AccessKeyId和AccessKeySecret的值复制进去。</li></ul><p><img alt="9" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122812/20191228121525-979618.png"></p><ul><li>而BucketDomain需要去阿里云的OSS中的文件管理，先随便上传一张图片，然后点击看看它的链接，如图：</li></ul><p><img alt="10" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122812/20191228121712-240809.png"></p><ul><li>然后把类似<code>http://flunggg.oss-cn-shenzhen.aliyuncs.com/</code>复制到BucketDomain去。</li><li>这个upload.js文件可以自定义配置很多东西，比如我上面限制上传文件大小最多为10MB，不过一般不要这么大，最多4MB左右，或者去压缩一下，推荐一个压缩网站：<a href="https://tinyjpg.com/" target="_blank" rel="external nofollow noopener noreferrer">tinyjpg</a>。太大的可以去压缩一下再放到图床。</li></ul><p><img alt="11" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122812/20191228122331-572148.png"></p><p><strong>注意：可能有时对于旧文章想上传，鼠标点一下，等候一下就会上传，如果没有上传则重新本地上传就会自动变为图床链接。并且再改变图片样式时不成功，我想把图片缩小点就不成功。</strong>但是确实方便很多。</p><p>参考：</p><p><a href="https://blog.csdn.net/weixin_39345384/article/details/80785373" target="_blank" rel="external nofollow noopener noreferrer">Hexo添加文章时自动打开编辑器</a></p>]]></content>
    
    <summary type="html">
    
      搭建博客系列：写作技巧，非常方便
    
    </summary>
    
    
      <category term="hexo" scheme="https://flunggg.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://flunggg.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建博客：美化主题第二篇</title>
    <link href="https://flunggg.cn/archives/6bbc4ccb.html"/>
    <id>https://flunggg.cn/archives/6bbc4ccb.html</id>
    <published>2019-12-24T08:23:44.000Z</published>
    <updated>2020-01-13T08:37:30.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="23-添加Valine评论"><a href="#23-添加Valine评论" class="headerlink" title="23. 添加Valine评论"></a>23. 添加Valine评论</h2><p>评论系统有很多种，只能选一种。</p><p>我自己喜欢用不登录评论，也就是偶尔有人要说一下，但是发现还得登录。这个评论系统就是Valine，下面是教程：</p><h3 id="23-1-注册LeanCloud"><a href="#23-1-注册LeanCloud" class="headerlink" title="23.1. 注册LeanCloud"></a>23.1. 注册LeanCloud</h3><p>点击<a href="https://www.leancloud.cn/" target="_blank" rel="external nofollow noopener noreferrer">LeanCloud</a>，去注册一个账号，点右上角的控制台就会跳到注册。这里有分为国内和国际版，国内的在2019-10-1之后需要自定义已备案域名才能继续提供服务了，觉得麻烦的同学可以移步去国际版<a href="https://leancloud.app/" target="_blank" rel="external nofollow noopener noreferrer">LeanCloud国际版</a>。</p><h3 id="23-2-创建应用"><a href="#23-2-创建应用" class="headerlink" title="23.2. 创建应用"></a>23.2. 创建应用</h3><p>注册好之后，进行实名验证、邮箱验证等等。</p><p>点击创建应用，输入名称，然后直接创建。</p><p><img alt="1" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226223250-526177.png"></p><h3 id="23-3-设置Web安全域名，填入自己的域名"><a href="#23-3-设置Web安全域名，填入自己的域名" class="headerlink" title="23.3.  设置Web安全域名，填入自己的域名"></a>23.3.  设置Web安全域名，填入自己的域名</h3><p>目的是：为了数据安全。</p><p>打开应用，点击 设置 -&gt; 安全中心。看下面，把能访问到你网站的URL全写进去。</p><p><img alt="2" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226231100-189293.png"></p><h3 id="23-4-获取APP-ID-和-APP-Key"><a href="#23-4-获取APP-ID-和-APP-Key" class="headerlink" title="23.4. 获取APP ID 和 APP Key"></a>23.4. 获取APP ID 和 APP Key</h3><p>如下打开：</p><p><img alt="3" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226223310-866021.png"></p><p>然后在主题目录的_config.yml 文件查询 valine，然后把上面的两个复制进去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Valine</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># For more information: https:&#x2F;&#x2F;valine.js.org, https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">valine:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  enable: true # 开启</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  appid:  # 添加你的appid</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  appkey: # 添加你的appkey</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  notify: false # Mail notifier</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  verify: false # Verification code</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  placeholder: Just go go # Comment box placeholder</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  avatar: monsterid # Gravatar style</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  guest_info: nick,mail,link # Custom comment header</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  pageSize: 10 # Pagination size</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  language: # Language, available values: en, zh-cn</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  visitor: true # Article reading statistic</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  comment_count: true # If false, comment count will only be displayed in post page, not in home page</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  recordIP: false # Whether to record the commenter IP</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  #post_meta_order: 0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  avatar_cdn: https:&#x2F;&#x2F;www.gravatar.com&#x2F;avatar&#x2F;</span></pre></td></tr></table></figure><p>效果图是这样的：</p><p><img alt="4" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226223312-376598.png"></p><p>不过上面的 网址(http://) 我觉得没什么用，就把它去掉了，打开themes\next\layout_third-party\comments中的valine.swig文件，删掉第三个，我的已经删了：</p><p><img alt="5" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226231109-15136.png"></p><p>也可以选择Gitalk评论系统，这个我就不说了。要的自己百度。</p><h2 id="24-Vline邮箱评论通知"><a href="#24-Vline邮箱评论通知" class="headerlink" title="24. Vline邮箱评论通知"></a>24. Vline邮箱评论通知</h2><p>每当有人在博文下面评论我们的博文，我们就可以使用这个插件通过邮箱知道。</p><p>下面这款插件是新款，有几个优点：</p><ul><li>完善的邮件通知，自定义 SMTP 发件频率和内容不再受限</li><li>基于 Akismet 的垃圾评论自动标注和过滤</li><li>评论管理，避免直接操作数据库</li></ul><p>效果：</p><p><img alt="6" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122716/20191227161440-133731.png"></p><p>1.我们还是要借助<a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="external nofollow noopener noreferrer">Leancloud</a>，打开刚刚我们创建的应用，如图：修改右边的边框内容。这是配置恢复模板。</p><p><img alt="7" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226231120-940462.png"></p><blockquote><p><strong>注</strong>：请注意修改链接为你的<code>博客</code>或者<code>网站首页</code>。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hi, &#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"你的网址首页链接"</span> <span class="attr">style</span>=<span class="string">"display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;"</span>&gt;</span>马上查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></pre></td></tr></table></figure><p>2.还是在Leancloud中，打开 云引擎 -》设置，把下面代码复制进去：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;DesertsP&#x2F;Valine-Admin.git</span></pre></td></tr></table></figure><p><img alt="8" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226231201-585025.png"></p><p>然后还是在这，点击 部署，如图：</p><p><img alt="9" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231521-977193.png"></p><p>上面的图我用别人的，因为我自己点开就是下面的图：</p><p><img alt="10" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231522-649612.png"></p><p>然后等待部署完，比较久。</p><p>3.然后还是回到 云引擎 -》 设置 中，如图：找到 自定义环境变量</p><p><img alt="11" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231530-750242.png"></p><p>需要配置信息：</p><table><thead><tr><th>变量名</th><th>实例</th><th>说明</th></tr></thead><tbody><tr><td>SITE_NAME</td><td>flunggg</td><td>【必填】网站名称</td></tr><tr><td>SITE_URL</td><td><a href="https://flunggg.cn/">https://flunggg.cn/</a></td><td>网站地址</td></tr><tr><td>SMTP_HOST</td><td>smtp.qq.com</td><td>QQ邮箱为这个，其他的自己查</td></tr><tr><td>SMTP_PORT</td><td>465</td><td>Https的邮件端口</td></tr><tr><td>SMTP_USER</td><td><a href="mailto:xxxxx@qq.com" target="_blank" rel="external nofollow noopener noreferrer">xxxxx@qq.com</a></td><td>这里填写QQ邮箱，然后有人评论就会发送到我们这个邮箱里</td></tr><tr><td>SMTP_PASS</td><td></td><td>这里添加邮箱申请的SMTP密码</td></tr><tr><td>SENDER_NAME</td><td>xxx博客–评论提醒</td><td>发送邮件的昵称</td></tr><tr><td>SENDER_EMAIL</td><td></td><td>发送人邮箱，同上面的QQ邮箱一致就行</td></tr><tr><td>ADMIN_URL</td><td></td><td>管理评论后台，这个待会说</td></tr></tbody></table><p>4.如何申请SMTP，直接看图，我用的是qq邮箱，你要用别的得去查。开启后把STMP密码复制到这。</p><p><img alt="12" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226231203-596536.png"></p><p>5.设置二级域名后你可以访问评论管理后台。还是在这里的下面找到 Web主机域名</p><p><img alt="13" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231540-510138.png"></p><p>现在好像已经是默认给你一个，不能改的，然后把这个域名复制到上面环境变量的ADMIN_URL。</p><p>我们还需要密码，用户名，需要在这里设置，只需要填写 email、password、username，这三个字段即可，使用 username 或 email 登陆即可。</p><p><img alt="14" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226231208-314925.png"></p><p><img alt="15" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226231212-930528.png"></p><p>然后重启下实例</p><p><img alt="16" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226231211-767956.png"></p><p>最后访问域名，输入我们刚刚的username或者email，登录。就可以管理我们的评论区啦。</p><p>LeanCloud 休眠策略</p><p>免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行：</p><ul><li>每天必须休眠 6 个小时</li><li>30 分钟内没有外部请求，则休眠。</li><li>休眠后如果有新的外部请求实例则马上启动（但激活时发送邮件会失败）。</li></ul><p>分析了一下上方的策略，如果不想付费的话，最佳使用方案就设置定时器，每天 7 - 23 点每 20 分钟访问一次，这样可以保持每天的绝大多数时间邮件服务是正常的。</p><h2 id="25-Valine-头像设置"><a href="#25-Valine-头像设置" class="headerlink" title="25. Valine 头像设置"></a>25. Valine 头像设置</h2><p>我们可以修改评论的头像，路人的头像有下面几种，默认为第一种</p><p><img alt="17" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229014500-940138.png"></p><p>在主题目录的_config.yml文件查找：valine 中，找到avatar，然后就可以修改上面的图标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># Valine</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># For more information: https:&#x2F;&#x2F;valine.js.org, https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">valine:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  avatar: monsterid # Gravatar style</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  ...</span></pre></td></tr></table></figure><blockquote><p>如果你修改了头像后发现没有更新，请不要慌张，因为<code>gravatar.cat.net</code> 有七天的缓存期，安静的等待吧</p></blockquote><p>然后还可以设置自己的自定义头像，登录 <a href="https://cn.gravatar.com/" target="_blank" rel="external nofollow noopener noreferrer">gravatar</a>，注册账号并设置头像，然后在valine评论时，输入我们刚刚注册的邮箱，会显示出我们自定义的头像。我的设置如下：</p><p><img alt="18" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229014509-84570.png"></p><h2 id="26-添加文章阅读次数"><a href="#26-添加文章阅读次数" class="headerlink" title="26. 添加文章阅读次数"></a>26. 添加文章阅读次数</h2><p>这个还是得借助<a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="external nofollow noopener noreferrer">Leancloud</a> 。</p><p>在主题目录的_config.yml 查询 leancloud_visitors</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">![23](D:\myblog\blog\source\_posts\hexo4-NexT7搭建博客(四)\23.png)# Show number of visitors of each article.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"># You can visit https:&#x2F;&#x2F;leancloud.cn to get AppID and AppKey.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"># AppID and AppKey are recommended to be the same as valine&#39;s for counter compatibility.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"># Do not enable both &#96;valine.visitor&#96; and &#96;leancloud_visitors&#96;.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  enable: true # 开启</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  app_id: # 填入你的Leancloud的appId</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  app_key: # 填入你的Leancloud的appKey</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  # Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-leancloud-counter-security</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  # If you don&#39;t care about security in leancloud counter and just want to use it directly</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  # (without hexo-leancloud-counter-security plugin), set &#96;security&#96; to &#96;false&#96;.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  security: false # 默认</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  betterPerformance: false # 默认</span></pre></td></tr></table></figure><p>点击刚刚创建的应用（评论那个），点击设置-&gt;应用Keys中的Id和Key。复制粘贴到上面那个地方。然后在该应用，有一个叫 存储，点开，然后看到创建Class，创建一个Counter就行。</p><p><img alt="9" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122720/20191227202707-993365.png"></p><p><img alt="10" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122720/20191227202922-607348.png"></p><h2 id="27-Url-持久化"><a href="#27-Url-持久化" class="headerlink" title="27. Url 持久化"></a>27. Url 持久化</h2><p>我们可以发现 hexo 默认生成的文章地址路径是 <code>【网站名称／年／月／日／文章名称】</code>。</p><p>这种链接对搜索爬虫是很不友好的，它的 url 结构超过了三层，太深了。</p><p>下面我推荐安装 <code>hexo-abbrlink</code> 插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span></pre></td></tr></table></figure><p>然后在站点目录下，查询 permalink</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># URL</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">url: https:&#x2F;&#x2F;flunggg.cn&#x2F;  # 这里我填写我自己的域名，没有域名的先别动</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">root: &#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">permalink: archives&#x2F;:abbrlink.html # 该这个</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">abbrlink:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  alg: crc32  # 算法：crc16(default) and crc32</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  rep: hex    # 进制：dec(default) and hex</span></pre></td></tr></table></figure><p>效果：</p><p><img alt="11" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229014745-258468.png"></p><h2 id="28-nofollow-标签的使用"><a href="#28-nofollow-标签的使用" class="headerlink" title="28. nofollow 标签的使用"></a>28. nofollow 标签的使用</h2><p>减少出站链接能够有效防止权重分散。简单的说就是，如果A网页上有一个链接指向B网页，但A网页给这个链接加上了 rel=”nofollow” 标注，则搜索引擎不把A网页计算入B网页的<a href="https://baike.baidu.com/item/反向链接/7535075" target="_blank" rel="external nofollow noopener noreferrer">反向链接</a>。<a href="https://baike.baidu.com/item/搜索引擎/104812" target="_blank" rel="external nofollow noopener noreferrer">搜索引擎</a>看到这个标签就可能减少或完全取消链接的投票<a href="https://baike.baidu.com/item/权重/10245966" target="_blank" rel="external nofollow noopener noreferrer">权重</a>。（百度百科）</p><p>安装插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-autonofollow --save</span></pre></td></tr></table></figure><p>然后在站点目录下的_config.yml添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># 外部链接优化</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">nofollow:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    enable: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    exclude:     # 例外的链接，可将友情链接放置此处</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    - &#39;yousite&#39;</span></pre></td></tr></table></figure><p>这样，例外的链接将不会被加上 nofollow 属性。</p><h2 id="29-取消“文章目录”的自动编号"><a href="#29-取消“文章目录”的自动编号" class="headerlink" title="29. 取消“文章目录”的自动编号"></a>29. 取消“文章目录”的自动编号</h2><p>在主题目录下的_config.yml，搜索 toc</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">number:</span> <span class="literal">false</span> <span class="comment"># 取消自动编号</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Maximum heading depth of generated toc.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span></pre></td></tr></table></figure><h2 id="30-背景（不要共存）"><a href="#30-背景（不要共存）" class="headerlink" title="30. 背景（不要共存）"></a>30. 背景（不要共存）</h2><h3 id="30-1-雨代码（就是我当前用的这样）"><a href="#30-1-雨代码（就是我当前用的这样）" class="headerlink" title="30.1 雨代码（就是我当前用的这样）"></a>30.1 雨代码（就是我当前用的这样）</h3><p>重头戏来了，我第一次发现这个也是惊喜一番。</p><p>在主题目录下的<code>themes\next\source\js\src</code>中新建一个名为DigitalRain.js文件。然后添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">window.onload &#x3D; function()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;获取画布对象</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    var canvas &#x3D; document.getElementById(&quot;canvas&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;获取画布的上下文</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    var context &#x3D;canvas.getContext(&quot;2d&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    var s &#x3D; window.screen;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    var W &#x3D; canvas.width &#x3D; s.width;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    var H &#x3D; canvas.height;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;获取浏览器屏幕的宽度和高度</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;var W &#x3D; window.innerWidth;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;var H &#x3D; window.innerHeight;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;设置canvas的宽度和高度</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    canvas.width &#x3D; W;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    canvas.height &#x3D; H;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;每个文字的字体大小</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    var fontSize &#x3D; 12;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;计算列</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    var colunms &#x3D; Math.floor(W &#x2F;fontSize);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;记录每列文字的y轴坐标</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    var drops &#x3D; [];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;给每一个文字初始化一个起始点的位置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    for(var i&#x3D;0;i&lt;colunms;i++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        drops.push(0);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;运动的文字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    var str &#x3D;&quot;WELCOME TO WWW.ITRHX.COM&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;4:fillText(str,x,y);原理就是去更改y的坐标位置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F;绘画的函数</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    function draw()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        context.fillStyle &#x3D; &quot;rgba(238,238,238,.08)&quot;;&#x2F;&#x2F;遮盖层</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        context.fillRect(0,0,W,H);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;给字体设置样式</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        context.font &#x3D; &quot;600 &quot;+fontSize+&quot;px  Georgia&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;给字体添加颜色</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        context.fillStyle &#x3D; [&quot;#33B5E5&quot;, &quot;#0099CC&quot;, &quot;#AA66CC&quot;, &quot;#9933CC&quot;, &quot;#99CC00&quot;, &quot;#669900&quot;, &quot;#FFBB33&quot;, &quot;#FF8800&quot;, &quot;#FF4444&quot;, &quot;#CC0000&quot;][parseInt(Math.random() * 10)];&#x2F;&#x2F;randColor();可以rgb,hsl, 标准色，十六进制颜色</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;写入画布中</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        for(var i&#x3D;0;i&lt;colunms;i++)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">            var index &#x3D; Math.floor(Math.random() * str.length);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">            var x &#x3D; i*fontSize;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">            var y &#x3D; drops[i] *fontSize;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">            context.fillText(str[index],x,y);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F;如果要改变时间，肯定就是改变每次他的起点</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">            if(y &gt;&#x3D; canvas.height &amp;&amp; Math.random() &gt; 0.99)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">                drops[i] &#x3D; 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            drops[i]++;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    function randColor()&#123;&#x2F;&#x2F;随机颜色</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        var r &#x3D; Math.floor(Math.random() * 256);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        var g &#x3D; Math.floor(Math.random() * 256);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">        var b &#x3D; Math.floor(Math.random() * 256);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">        return &quot;rgb(&quot;+r+&quot;,&quot;+g+&quot;,&quot;+b+&quot;)&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">    draw();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    setInterval(draw,35);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure><p>然后在主题目录<code>themes\next\layout</code>下的_layout.swig文件中，在&lt;/html&gt;上添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;!-- 数字雨 --&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;canvas id&#x3D;&quot;canvas&quot; width&#x3D;&quot;1440&quot; height&#x3D;&quot;900&quot; &gt;&lt;&#x2F;canvas&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;DigitalRain.js&quot;&gt;&lt;&#x2F;script&gt;</span></pre></td></tr></table></figure><p>并且，在主题目录的配置文件_config.yml中查找 custom_file_path</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Define custom file paths.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">mixin:</span> <span class="string">source/_data/mixins.styl</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span></pre></td></tr></table></figure><p>这些文件可以自定义css，只需要开启（把#去掉）就行。然后根据路径创建该文件，或者可以自定义文件路径然后去创建。我在<code>source/_data/styles.styl</code>中添加如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">canvas</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">position</span>: fixed;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">right</span>: <span class="number">0px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">bottom</span>: <span class="number">0px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">min-width</span>: <span class="number">100%</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">height</span>: auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="30-2-自定义背景图"><a href="#30-2-自定义背景图" class="headerlink" title="30.2 自定义背景图"></a>30.2 自定义背景图</h3><p>像上面那样，去开启一个css文件路径，然后添加代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">添加背景图片</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="string">body</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">background:</span> <span class="string">url(/images/background.jpg);</span> <span class="string">//</span> <span class="string">你给的背景图</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="string">-moz-background-size:100%</span> <span class="number">100</span><span class="string">%;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="string">-webkit-background-size:100%</span> <span class="number">100</span><span class="string">%;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">top:</span> <span class="number">0</span><span class="string">;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">left:</span> <span class="number">0</span><span class="string">;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">z-index:</span> <span class="number">-2</span><span class="string">;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">background-repeat:</span> <span class="literal">no</span><span class="string">-repeat;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">background-attachment:</span> <span class="string">fixed;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">background-position:</span> <span class="number">50</span><span class="string">%</span> <span class="number">50</span><span class="string">%;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">background-size:</span> <span class="string">cover;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr></table></figure><h3 id="30-3-其他背景"><a href="#30-3-其他背景" class="headerlink" title="30.3 其他背景"></a>30.3 其他背景</h3><p>其他背景都可以在主题目录配置文件_config.yml ，查询 canvas_nest和canvas_ribbon，我就不说了，具体参考官方：<a href="https://github.com/hustcc/canvas-nest.js" target="_blank" rel="external nofollow noopener noreferrer">Canvas-nest</a>，<a href="https://github.com/zproo/canvas-ribbon" target="_blank" rel="external nofollow noopener noreferrer">Canvas-ribbon</a>。得先安装才能开启。</p><h2 id="31-浏览器网页标题恶搞（转，有贴转载地址）"><a href="#31-浏览器网页标题恶搞（转，有贴转载地址）" class="headerlink" title="31. 浏览器网页标题恶搞（转，有贴转载地址）"></a>31. 浏览器网页标题恶搞（转，有贴转载地址）</h2><p>效果：</p><p><img alt="12" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122723/20191227230231-60662.png"></p><p><img alt="13" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122723/20191227230232-474188.png"></p><p>当用户访问你的博客时点击到了其他网页，我们可以恶搞一下网页标题，呼唤用户回来，首先在目录 \Hexo\themes\hexo-theme-spfk\source\js 下新建一个 FunnyTitle.js 文件，在里面填写如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;!--浏览器搞笑标题--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> OriginTitle = <span class="built_in">document</span>.title;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> titleTime;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"> <span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">     <span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">         $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"/img/trhx2.png"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">         <span class="built_in">document</span>.title = <span class="string">'ヽ(●-`Д´-)ノ你丑你就走！'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">         clearTimeout(titleTime);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">     &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">     <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">         $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"/img/trhx2.png"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">         <span class="built_in">document</span>.title = <span class="string">'ヾ(Ő∀Ő3)ノ你帅就回来！'</span> + OriginTitle;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">         titleTime = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">             <span class="built_in">document</span>.title = OriginTitle;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">         &#125;, <span class="number">2000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">     &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"> &#125;);</span></pre></td></tr></table></figure><p>然后在主题目录<code>themes\next\layout</code>下的_layout.swig文件中，在&lt;/html&gt;上添加如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;!--浏览器搞笑标题--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/FunnyTitle.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></pre></td></tr></table></figure><h2 id="32-一些样式"><a href="#32-一些样式" class="headerlink" title="32. 一些样式"></a>32. 一些样式</h2><p>还是刚刚的主题目录的配置文件_config.yml中查找 custom_file_path</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Define custom file paths.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">mixin:</span> <span class="string">source/_data/mixins.styl</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span></pre></td></tr></table></figure><p>在<code>source/_data/styles.styl</code>中添加如下代码：下面的属性都可以在自己的网站按F12来查看要修改哪里，这应该不用我废话了。我的CSS都是复制别人的，自己不会CSS。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">// 文章之间的分割线</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-eof</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin</span>: <span class="number">4em</span> auto <span class="number">4em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background</span>: white;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">// 标题栏</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-meta</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">// 这些自定义添加</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">// 底部文字</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer-inner</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">font-size</span>: <span class="number">17px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">color</span>:  <span class="number">#262626</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">font-family</span>: <span class="string">'EB Garamond'</span>,<span class="string">"Noto Serif SC"</span>,sans-serif;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">font-weight</span>: bold;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fa-heart</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">color</span>: red;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-meta-item-icon</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">color</span>: red;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">// 这些自定义添加</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">// 修改主体透明度</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main-inner</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background</span>: <span class="number">#000</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.90</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">padding-right</span>: <span class="number">3px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">padding-left</span>: <span class="number">3px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">//主页文章添加阴影效果</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">padding</span>: <span class="number">25px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 203, .5);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">// 移动端</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> (max-width: <span class="number">767px</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">  <span class="selector-class">.post-block</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">padding-right</span>:<span class="number">10px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-eof</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">margin</span>: <span class="number">4em</span> auto <span class="number">4em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    <span class="attribute">background</span>: white;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="33-一些修改"><a href="#33-一些修改" class="headerlink" title="33. 一些修改"></a>33. 一些修改</h2><p>比如，默认这里是很长的，我现在是改了，太长会导致手机端显示不好，所以可以改</p><ul><li>电脑端：</li></ul><p><img alt="14" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122723/20191227235222-622840.png"></p><ul><li>手机端：</li></ul><p><img alt="15" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122723/20191227235317-936841.png"></p><p>在主题目录<code>themes\next\layout\_macro</code>的post.swig中修改。主要是加个换行。</p><p><img alt="16" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122723/20191227235613-926949.png"></p><p>搜索：if theme.leancloud_visitors.enable 。然后在这上面添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;#添加换行#&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></pre></td></tr></table></figure><p>参考：</p><p><a href="https://tding.top/archives/9a232bbe.html" target="_blank" rel="external nofollow noopener noreferrer">小丁的个人博客</a></p><p><a href="https://cloud.tencent.com/developer/article/1142490" target="_blank" rel="external nofollow noopener noreferrer">评论邮箱参考</a></p><p><a href="https://valine.js.org/avatar.html" target="_blank" rel="external nofollow noopener noreferrer">Valine官方</a></p><p><a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/" target="_blank" rel="external nofollow noopener noreferrer">雨代码，标题恶搞</a></p>]]></content>
    
    <summary type="html">
    
      接上面一篇，搭建博客系列：美化主题第一篇
    
    </summary>
    
    
      <category term="hexo" scheme="https://flunggg.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://flunggg.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建博客：美化主题第一篇</title>
    <link href="https://flunggg.cn/archives/53889e4c.html"/>
    <id>https://flunggg.cn/archives/53889e4c.html</id>
    <published>2019-12-23T14:27:29.000Z</published>
    <updated>2020-01-13T08:46:35.065Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-添加博客图标"><a href="#1-添加博客图标" class="headerlink" title="1. 添加博客图标"></a>1. 添加博客图标</h2><p>如：<img alt="1" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231720-467532.png"></p><p>在主题目录下_config.yml文件查询 favicon，只需要修改前两个：small和medium，图片的像素得为16像素和32像素</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span></pre></td></tr></table></figure><p>你可以看到这两个属性的值，/images其实完整的路径为：themes/next/source/images 这条路径来定位的。</p><p>也可以定义外部URI。</p><p>可以去图标素材：<a href="https://www.iconfont.cn/" target="_blank" rel="external nofollow noopener noreferrer">iconfont</a>，<a href="https://www.easyicon.net/" target="_blank" rel="external nofollow noopener noreferrer">easyicon</a>。中下载16x16和32x32大小的PNG格式图片，然后放到themes/next/source/images下。</p><p>可以得出，要在主题某处添加什么图片都可以放在这个目录下。</p><h2 id="2-鼠标点击特效（二选一）"><a href="#2-鼠标点击特效（二选一）" class="headerlink" title="2. 鼠标点击特效（二选一）"></a>2. 鼠标点击特效（二选一）</h2><h3 id="2-1-红心特效"><a href="#2-1-红心特效" class="headerlink" title="2.1 红心特效"></a>2.1 红心特效</h3><p>刚刚说了主题图片可以放在themes\next\source\images，而themes\next\source有一个js文件，我们在themes\next\source\js\src（如果没有就自己创建） 下新建文件clicklove.js，然后把下面的代码copy到该文件中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span></pre></td></tr></table></figure><p>然后在\themes\next\layout_layout.swig文件末尾添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clicklove.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></pre></td></tr></table></figure><h3 id="2-2-爆炸烟花"><a href="#2-2-爆炸烟花" class="headerlink" title="2.2 爆炸烟花"></a>2.2 爆炸烟花</h3><p>在themes\next\source\js\src（如果没有就自己创建） 下新建文件firework.js，然后把下面的代码copy到该文件中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span></pre></td></tr></table></figure><p>然后在\themes\next\layout_layout.swig文件末尾添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;!-- 爆炸烟花 --&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;canvas <span class="class"><span class="keyword">class</span></span>=<span class="string">"fireworks"</span> style=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/firework.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></pre></td></tr></table></figure><h2 id="3-设置头像"><a href="#3-设置头像" class="headerlink" title="3. 设置头像"></a>3. 设置头像</h2><p>在主题目录（themes/next/）中的_config.yml，查找 avatar</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 把你要的头像文件名字改为avatar并放到相应路径下，如果后缀不同，则在这里改后缀，不要改图片后缀</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span></pre></td></tr></table></figure><h2 id="4-侧边栏社交小图标设置"><a href="#4-侧边栏社交小图标设置" class="headerlink" title="4. 侧边栏社交小图标设置"></a>4. 侧边栏社交小图标设置</h2><p>在主题目录打开_config.yml，查询  social</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/magicflung</span> <span class="string">||</span> <span class="string">github</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#E-Mail: mailto:yourname@gmail.com || envelope</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || weibo</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#RSS: /atom.xml || rss</span></span></pre></td></tr></table></figure><p>然后启动你想要的，并修改成自己的路径。目前只有这些。</p><h2 id="5-文章末尾的标签图标修改"><a href="#5-文章末尾的标签图标修改" class="headerlink" title="5. 文章末尾的标签图标修改"></a>5. 文章末尾的标签图标修改</h2><p>默认是 带“#”，可以把它换成图标。还是主题目录打开_config.yml中查询  tag_icon</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span></pre></td></tr></table></figure><p>效果：</p><p><img alt="2" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231727-159960.png"></p><h2 id="6-访问量统计"><a href="#6-访问量统计" class="headerlink" title="6. 访问量统计"></a>6. 访问量统计</h2><p>在主题目录打开_config.yml，查询  busuanzi</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否开启访问量统计</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">false</span> <span class="comment"># 本站访客数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">user</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span> <span class="comment"># 本站总访问量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">eye</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">post_views:</span> <span class="literal">false</span> <span class="comment"># 文章访问量，但我不喜欢用这个，因为在我的网站首页不会显示每篇博文的访问量，而是得点进博文，我用别的来统计，待会会说</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">eye</span></span></pre></td></tr></table></figure><p>但是我当时配置时失效，我百度一下，找到解决方案，原来是不蒜子使用的七牛的域名被强制过期。。</p><p>在<code>\themes\next\layout\_third-party\statistics中的busuanzi-counter.swig</code>中，看最前面，如图：</p><p><img alt="3" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231729-372918.png"></p><p>我是改了的，你把src中的改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js</span></pre></td></tr></table></figure><p>在主题目录的<code>\themes\next\layout\_partials\footer.swig</code>，在最后添加上下面这条，可以自己修改显示的位置。我忘记了是不是本来就有配，并且是否有下面代码的第一条，如果有则在里面添加。没用就直接复制下面的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;%- if theme.footer.powered.enable %&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  &lt;span id&#x3D;&quot;busuanzi_container_site_pv&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    本站总访问量&lt;span class&#x3D;&quot;busuanzi-value&quot; id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;次</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  &lt;&#x2F;span&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#123;%- endif %&#125;</span></pre></td></tr></table></figure><p>注意：本地测试的访问量刚开始会很大不正常，但是部署后是正常的，这点不用理。</p><h2 id="7-添加站内搜索"><a href="#7-添加站内搜索" class="headerlink" title="7. 添加站内搜索"></a>7. 添加站内搜索</h2><p>在站内按照搜索，站点目录打开Git Bash，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-generator-search --save</span></pre></td></tr></table></figure><p>然后在站点目录的_config.yml文件把下面代码添加进去，不用修改。我测试过可以不配置下面的代码，插件默认只索引文章(post)，要想页面(page)也能被检索，则把path的值改为all。</p><p>具体可参考官方：<a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="external nofollow noopener noreferrer">hexo-generator-search</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span></pre></td></tr></table></figure><p>最后在主题目录的_config.yml文件，查询 local_search</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启站内搜索</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 如果自动，则通过更改输入触发搜索。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 如果是手动，则按回车键或搜索按钮触发搜索。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 显示每篇文章的前n个结果，通过设置-1显示所有结果</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 将html字符串转换为可读字符串。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 加载页面时预加载搜索数据。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span></pre></td></tr></table></figure><h2 id="8-启动阅读更多按钮"><a href="#8-启动阅读更多按钮" class="headerlink" title="8.  启动阅读更多按钮"></a>8.  启动阅读更多按钮</h2><p>在主题目录的_config.yml中，查询：read_more_btn</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Read more button</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span> <span class="comment"># 启动</span></span></pre></td></tr></table></figure><p>效果：</p><p><img alt="4" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231733-348452.png"></p><p>这里需要额外说一下，必须在每篇博文的最前面有一堆默认键值对代码那里，添加上一个键: description，</p><p>然后冒号： :，然后再空格，添加上自己的小文段。</p><p> <img alt="5" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231737-415857.png"></p><p>但是每次都得自己加太麻烦了，所以在站点目录下的scaffolds文件中有个post文件，这个文件就是博文模板，点开就可以添加每篇博文的通用信息。我的如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">top:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><h2 id="9-文章顶置（二选一，看看哪种简单）"><a href="#9-文章顶置（二选一，看看哪种简单）" class="headerlink" title="9. 文章顶置（二选一，看看哪种简单）"></a>9. 文章顶置（二选一，看看哪种简单）</h2><h3 id="9-1-方法一"><a href="#9-1-方法一" class="headerlink" title="9.1 方法一"></a>9.1 方法一</h3><p>在站点目录的 node_modules/hexo-generator-index/lib/generator.js 中，把改文件的代码全改成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    perPage: config.index_generator.per_page,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    data: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">      __index: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure><p>然后可以在博文模板post中加个top键，值为整数，并且值为大越靠前。</p><h3 id="9-2-方法二"><a href="#9-2-方法二" class="headerlink" title="9.2 方法二"></a>9.2 方法二</h3><p>在站点目录下打开Git Bash，先把原先的顶置插件卸载了，然后再装上hexo-generator-index-pin-top，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index-pin-top --save</span></pre></td></tr></table></figure><p>然后可以在博文模板（站点目录下的scaffolds文件夹）post中加个top键，值为整数，并且值为大越靠前。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">top:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><p>然后新建的md文档就会带出top属性，然后才能修改top数值。</p><p>最后，两种都可以用的，就是在顶置博文时，没用一个顶置图标感觉有点怪怪的，所以可以加个图标。在主题目录中的themes\next\layout\_macro的post文件，打开查询下面代码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"post-meta"</span>&gt;</span></span></pre></td></tr></table></figure><p>然后这个div的下一行添加上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;fa fa-thumb-tack&quot;&gt;&lt;&#x2F;i&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;font color&#x3D;7D26CD&gt;置顶&lt;&#x2F;font&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;span class&#x3D;&quot;post-meta-divider&quot;&gt;|&lt;&#x2F;span&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&#123;% endif %&#125;</span></pre></td></tr></table></figure><p>效果：</p><p><img alt="6" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231802-763884.png"></p><h2 id="10-在文章底部增加版权信息"><a href="#10-在文章底部增加版权信息" class="headerlink" title="10. 在文章底部增加版权信息"></a>10. 在文章底部增加版权信息</h2><h3 id="10-1-方式一"><a href="#10-1-方式一" class="headerlink" title="10.1 方式一"></a>10.1 方式一</h3><p>最简单，在主题目录的_config.yml查询 creative_commons</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">post:</span> <span class="literal">true</span> <span class="comment"># 开启</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">language:</span></span></pre></td></tr></table></figure><p>但是这种如何改变样式我没研究，我喜欢下面的方式，毕竟还可以自己加上样式、文字等。</p><h3 id="10-2-方式二（比较麻烦，但是好看）"><a href="#10-2-方式二（比较麻烦，但是好看）" class="headerlink" title="10.2 方式二（比较麻烦，但是好看）"></a>10.2 方式二（比较麻烦，但是好看）</h3><p>我用网上的直接复制的代码，但是在这段代码中的sweetalert外部链接不知道咋了，访问超时，导致我的博文访问一篇文章贼慢，我以为是哪里出错。<strong>这也是一个启示：如果博文突然变得慢，打开web工具检查一下那些加载过慢，考虑是否要删去，或者是哪里出错。</strong>如下图：11s的加载。</p><p><img alt="7" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231804-399466.png"></p><p>所以出错就是在这一句：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://unpkg.com/sweetalert/dist/sweetalert.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></pre></td></tr></table></figure><p>我下载一个本地的js，然后自己改成本地连接就好了。</p><p><a href="https://www.lanzous.com/i88qxni" target="_blank" rel="external nofollow noopener noreferrer">点击下载</a>，然后解压，把sweetalert.min.js文件放到themes\next\source\js中，</p><p>在themes\next\layout_macro中新建一个 my-copyright.swig文件，并添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">  &#123;% <span class="keyword">if</span> page.copyright %&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"my_post_copyright"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  &lt;script src=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  &lt;script src=<span class="string">"https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">   &lt;!-- JS库 sweetalert 引用本地路径 --&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  &lt;script src=<span class="string">"/js/sweetalert.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">title</span>=<span class="string">"访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&#123;&#123; page.date.format(<span class="string">"YYYY年MM月DD日 - HH:MM"</span>) &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/</span>span&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; page.title &#125;&#125;"</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"copy-path"</span>  title=<span class="string">"点击复制文章链接"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"&#123;&#123; page.permalink &#125;&#125;"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  &lt;<span class="regexp">/p&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/</span>span&gt; 转载请保留原文链接及作者。&lt;<span class="regexp">/p&gt;  </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">&lt;/</span>div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">      $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">      clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        swal(&#123;   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">          title: <span class="string">""</span>,   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">          text: <span class="string">'复制成功'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">          icon: <span class="string">"success"</span>, </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">          showConfirmButton: <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">          &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="regexp">/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span></pre></td></tr></table></figure><p>然后在themes\next\source\css_common\components\post中新建my-post-copyright.styl 文件，添加上我们的版权样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">85%</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">max-width</span>: <span class="number">45em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">word-break</span>: break-all;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.4);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">display</span>: inline-block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">5.2em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">color</span>: <span class="number">#b5b5b5</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">font-weight</span>: bold;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">5em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">color</span>: <span class="number">#a3d2a3</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">text-decoration</span>: underline;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">font-weight</span>: normal;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">  +mobile()&#123;display:none;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">cursor</span>: pointer;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>然后在themes/next/layout/_macro/post.swig中，搜索 END POST BODY，然后再下一行添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;% if not is_index %&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;% include &#39;my-copyright.swig&#39; %&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#123;% endif %&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;div&gt;</span></pre></td></tr></table></figure><p>然后回到站点目录下的scaffolds文件中有个post文件，添加copyright: true。也就是我上面那图，这就会在每篇博文下添加版权信息，也方便别人复制你的url。</p><h2 id="11-添加打赏"><a href="#11-添加打赏" class="headerlink" title="11. 添加打赏"></a>11. 添加打赏</h2><p>在主题文件的_config.yml，查询：reward</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">reward_settings:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启打赏</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">animation:</span> <span class="literal">true</span> <span class="comment"># 开启动画抖动，可以自己试试</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#comment: Donate comment here.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span> <span class="comment"># 放微信的收款码</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span> <span class="comment"># 放支付宝的收款码</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span></pre></td></tr></table></figure><h2 id="12-文章加密访问"><a href="#12-文章加密访问" class="headerlink" title="12. 文章加密访问"></a>12. 文章加密访问</h2><p>我不推荐用，毕竟只是前端校验而已。虽然一般人破不出。</p><h2 id="13-启动代码复制按钮"><a href="#13-启动代码复制按钮" class="headerlink" title="13. 启动代码复制按钮"></a>13. 启动代码复制按钮</h2><p>打开主题目录的_config.yml，查询 copy_button。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Code Highlight theme</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># Add copy button on codeblock</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">copy_button:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启代码复制按钮</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># Show text copy result.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">style:</span> <span class="string">mac</span> <span class="comment"># 代码框样式，我喜欢用mac的，上面有三个选择都可以试试</span></span></pre></td></tr></table></figure><h2 id="14-在Footer添加站点运行时间"><a href="#14-在Footer添加站点运行时间" class="headerlink" title="14. 在Footer添加站点运行时间"></a>14. 在Footer添加站点运行时间</h2><p>在主题目录的/themes/next/layout/_partials/footer.swig中找到下面这句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;%- if theme.footer.theme.enable %&#125;</span></pre></td></tr></table></figure><p>然后在这句的下面添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"days"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="regexp">/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">&lt;script language="javascript"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">function show_date_time()&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">window.setTimeout("show_date_time()", 1000);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">BirthDay=new Date("11/</span><span class="number">29</span>/<span class="number">2019</span> <span class="number">20</span>:<span class="number">00</span>:<span class="number">00</span><span class="string">");</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">today=new Date();</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">timeold=(today.getTime()-BirthDay.getTime());</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="string">sectimeold=timeold/1000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="string">secondsold=Math.floor(sectimeold);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="string">msPerDay=24*60*60*1000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="string">e_daysold=timeold/msPerDay</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="string">daysold=Math.floor(e_daysold);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="string">e_hrsold=(e_daysold-daysold)*24;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="string">hrsold=setzero(Math.floor(e_hrsold));</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="string">e_minsold=(e_hrsold-hrsold)*60;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="string">minsold=setzero(Math.floor((e_hrsold-hrsold)*60));</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="string">seconds=setzero(Math.floor((e_minsold-minsold)*60));</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="string">document.getElementById('days').innerHTML="</span>已运行<span class="string">"+daysold+"</span>天<span class="string">"+hrsold+"</span>时<span class="string">"+minsold+"</span>分<span class="string">"+seconds+"</span>秒<span class="string">";</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="string">function setzero(i)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="string">if (i&lt;10)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;i="</span><span class="number">0</span><span class="string">" + i&#125;;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="string">return i;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="string">show_date_time();</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;/script&gt;</span></span></pre></td></tr></table></figure><p>在这条语句里面我把原先的代码都注释了，不想用。为了怕说不清，贴图：</p><p><img alt="8" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231815-105794.png"></p><h2 id="15-实现文章统计功能"><a href="#15-实现文章统计功能" class="headerlink" title="15. 实现文章统计功能"></a>15. 实现文章统计功能</h2><p>安装一个 hexo-symbols-count-time插件，可以统计字数和阅读分钟数，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span></pre></td></tr></table></figure><p>然后在站点目录的config.yml最后添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span>     <span class="comment"># 排除代码字数统计</span></span></pre></td></tr></table></figure><p>不喜欢的可以使用false让它不启动。并且文章字数统计时，他是连空格，标点符号等都统计了，可能会导致文章的字数会不正确，偏大。</p><p>效果：</p><p><img alt="9" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226231824-661591.png"></p><h2 id="16-修改博文目录"><a href="#16-修改博文目录" class="headerlink" title="16. 修改博文目录"></a>16. 修改博文目录</h2><p>在主题目录的_config.yml 查询 toc</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 侧边栏中的目录</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Front-matter variable (unsupport wrap expand_all).</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否启动博文目标</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 自动将列表号添加到目录。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 如果为true，则如果标题宽度大于边栏宽度，则所有单词都将放在下一行。width.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 如果为true，则将显示帖子中所有级别的TOC，而不是其中激活的部分。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 生成的子标题的最大深度。</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span></pre></td></tr></table></figure><h2 id="17-RSS订阅（非必要）"><a href="#17-RSS订阅（非必要）" class="headerlink" title="17. RSS订阅（非必要）"></a>17. RSS订阅（非必要）</h2><p>原因：RSS订阅可以对文章内容进行订阅。如下：就不必每次去收藏夹找该博客网站</p><p><img alt="10" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229013659-263920.png"></p><p>首先在站点目录下打开Git Bash 安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span></pre></td></tr></table></figure><p>然后打开站点目录的_config.yml在后面添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># RSS</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">plugins: hexo-generate-feed</span></pre></td></tr></table></figure><p>然后在站点目录的_config.yml 查找 RSS</p><p>然后把它的注释去掉，即开启，并且不用去创建该页面，会自动生成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">RSS: &#x2F;atom.xml || rss</span></pre></td></tr></table></figure><p>然后部署到网站就可以看到，但是我们点开时是一堆代码，我们需要安装一个RSS阅读器的插件，在浏览器搜索</p><p>RSS，谷歌商城一般登不上，登得上一样查RSS就行，那在火狐的附加工具搜，第一个就是下面这个：</p><p><img alt="11" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122623/20191226232019-428953.png"></p><p>安装这个，使用方法：</p><p><img alt="12" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229013913-420349.png"></p><p><img alt="13" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229013847-814814.png"></p><p><img alt="14" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229014002-593018.png"></p><p>RSS的URL就是我们点开后一堆代码的上面的URL，比如我的是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;flunggg.cn&#x2F;atom.xml</span></pre></td></tr></table></figure><h2 id="18-GitHub-Fork-Me"><a href="#18-GitHub-Fork-Me" class="headerlink" title="18. GitHub Fork Me"></a>18. GitHub Fork Me</h2><p>这个可以在我们的网站右上角出现一个到GitHub的跳转按钮，其实也跟侧边栏那个社交小图标差不多功能</p><p>在主题目录的_config.yml查询 github_banner</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># &#96;Follow me on GitHub&#96; banner in the top-right corner.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">github_banner:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  enable: true # 开启</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  permalink: https:&#x2F;&#x2F;github.com&#x2F;magicflung # 把它改为你的github首页</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  title: Follow me on GitHub</span></pre></td></tr></table></figure><h2 id="19-bookmark"><a href="#19-bookmark" class="headerlink" title="19. bookmark"></a>19. bookmark</h2><p>Bookmark是一个插件，允许用户保存他们的阅读进度。用户只需单击页面左上角的书签图标即可保存滚动位置。当他们下次访问您的博客时，他们可以自动恢复每个页面的最后滚动位置。</p><p>在主题目录的_config.yml查询 bookmark</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">bookmark:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  enable: true # 开启</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  # Customize the color of the bookmark.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  color: &quot;#836FFF&quot; # 自定义颜色</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  # If auto, save the reading progress when closing the page or clicking the bookmark-icon.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  # If manual, only save it by clicking the bookmark-icon.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  save: auto # 会自动保存阅读进度</span></pre></td></tr></table></figure><p>效果：</p><p><img alt="15" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229013325-336995.png"></p><h2 id="20-添加lazyload（跟后面的图片点击全屏看不能共存）"><a href="#20-添加lazyload（跟后面的图片点击全屏看不能共存）" class="headerlink" title="20. 添加lazyload（跟后面的图片点击全屏看不能共存）"></a>20. 添加lazyload（跟后面的图片点击全屏看不能共存）</h2><p>对于图片进行延迟加载，访问到图片位置时才去请求图片资源，这样可以提高博客的访问速度，节省流量。下面一整条都复制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install --save lozad</span></pre></td></tr></table></figure><p>然后在你的主题目录的配置文件 <code>_config.yml</code> 中，查询 lazyload</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># Vanilla JavaScript plugin for lazyloading images.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># For more information: https://github.com/ApoorvSaxena/lozad.js</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span> <span class="literal">true</span> <span class="comment"># 开启</span></span></pre></td></tr></table></figure><h2 id="21-显示当前浏览进度（两者可共存）"><a href="#21-显示当前浏览进度（两者可共存）" class="headerlink" title="21. 显示当前浏览进度（两者可共存）"></a>21. 显示当前浏览进度（两者可共存）</h2><h3 id="21-1-方式一"><a href="#21-1-方式一" class="headerlink" title="21.1 方式一"></a>21.1 方式一</h3><p>在主题目录的_config.yml查询scrollpercent，默认为false，改为true</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">back2top:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  enable: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  # Back to top in sidebar.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  sidebar: false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  # Scroll percent label in b2t button.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  scrollpercent: true # 开启</span></pre></td></tr></table></figure><h3 id="21-2-方式二"><a href="#21-2-方式二" class="headerlink" title="21.2 方式二"></a>21.2 方式二</h3><p>在主题目录的_config.yml查询reading_progress</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># Reading progress bar</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">reading_progress:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  enable: true # 开启</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  # Available values: top | bottom</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  position: top # top会出现在页面最顶部，bottom会出现在那里</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  color: &quot;#836FFF&quot; # 可修改颜色</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  height: 3px</span></pre></td></tr></table></figure><h2 id="22-Footer-页脚设置"><a href="#22-Footer-页脚设置" class="headerlink" title="22. Footer / 页脚设置"></a>22. Footer / 页脚设置</h2><p>在主题目录的_config.yml 查询 footer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">footer:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  # Specify the date when the site was setup. If not defined, current year will be used.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  #since: 2019</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  # Icon between year and copyright info.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  icon:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    # Icon name in Font Awesome. See: https:&#x2F;&#x2F;fontawesome.com&#x2F;v4.7.0&#x2F;icons&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    # &#96;heart&#96; is recommended with animation in red (#ff0000).</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    name: heart # 可以修改图片，可以去 https:&#x2F;&#x2F;fontawesome.com&#x2F;v4.7.0&#x2F;icons&#x2F; 找</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    # If you want to animate the icon, set it to true.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    animated: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    # Change the color of icon, using Hex Code.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    color: &quot;#F5F5F5&quot; # 图标颜色</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  # If not defined, &#96;author&#96; from Hexo &#96;_config.yml&#96; will be used.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  copyright:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  # Powered by Hexo 字样，不喜欢可以设置为 false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  powered:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    # Hexo link (Powered by Hexo).</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    enable: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    # Version info of Hexo after Hexo link (vX.X.X).</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    version: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  # 主题字样，不喜欢可以 false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">  theme:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    enable: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    version: true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">  # 备案信息，如果网站有备案号，可以在这里填写备案号</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">  # Beian ICP and gongan information for Chinese users. See: http:&#x2F;&#x2F;www.beian.miit.gov.cn, http:&#x2F;&#x2F;www.beian.gov.cn</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">  beian:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    enable: false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    icp:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    # The digit in the num of gongan beian.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    gongan_id:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    # The full num of gongan beian.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    gongan_num:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    # The icon for gongan beian. See: http:&#x2F;&#x2F;www.beian.gov.cn&#x2F;portal&#x2F;download</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    gongan_icon_url:</span></pre></td></tr></table></figure><p>然后还可以在 themes\next\layout_partials的footer.swig里修改，这个我在前面的Footer添加运行时间有说，在这个文件可以修改他们的位置，也可以手动去掉或添加某些东西。如我的：</p><p><img alt="16" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019122901/20191229014054-350909.png"></p><blockquote><p>观看下一篇hexo系列博文(四)</p></blockquote><p>参考：</p><p>​    <a href="https://blog.csdn.net/weixin_42905141/article/details/102677424" target="_blank" rel="external nofollow noopener noreferrer">1</a></p><p>​    <a href="https://zhuanlan.zhihu.com/p/60424755" target="_blank" rel="external nofollow noopener noreferrer">2</a></p>]]></content>
    
    <summary type="html">
    
      搭建博客系列：美化主题
    
    </summary>
    
    
      <category term="hexo" scheme="https://flunggg.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://flunggg.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建博客：Next主题</title>
    <link href="https://flunggg.cn/archives/66b7033a.html"/>
    <id>https://flunggg.cn/archives/66b7033a.html</id>
    <published>2019-12-22T13:13:44.000Z</published>
    <updated>2020-01-13T08:38:03.789Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-主题"><a href="#1-主题" class="headerlink" title="1. 主题"></a>1. 主题</h2><p>主题文件都是存放在站点的themes文件下，默认为landscape主题，主题可以从hexo官网下载，每个主题都会有文档。</p><p>下载主题有两种方式，一种是下载主题包然后放到themes文件中，而我喜欢用另一种，就是使用GitBash从github上clone下来，可能速度有点慢，自己也可以用第一种方法，去github直接下载。</p><h2 id="2-语言"><a href="#2-语言" class="headerlink" title="2. 语言"></a>2. 语言</h2><p>一开始来是英文的，所以得改成中文，打开站点目录下的_config.yml。找到下面的代码：</p><p><img alt="1" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226222123-835691.png"></p><p>在language的值修改为: zh-CN</p><p>然后测试下就变中文。</p><h2 id="3-NexT主题"><a href="#3-NexT主题" class="headerlink" title="3. NexT主题"></a>3. NexT主题</h2><h4 id="3-1-下载NexT主题"><a href="#3-1-下载NexT主题" class="headerlink" title="3.1 下载NexT主题"></a>3.1 下载NexT主题</h4><p>我使用的是Next主题，比较火，出bug容易找到解决方案，访问速度很快，简洁。</p><p>打开GitBash，定位到你的博客站点目录下，或者在你的博客站点目录右键点击GitBash。输入如下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next.git themes&#x2F;next</span></pre></td></tr></table></figure><p>然后等待下载，最后的themes/next 表示会把克隆的主题放到该目录，具体可以参考  <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="external nofollow noopener noreferrer">官方</a>。</p><h4 id="3-2-更换主题"><a href="#3-2-更换主题" class="headerlink" title="3.2 更换主题"></a>3.2 更换主题</h4><p>在站点目录下的_config.yml文件中更改新下载的主题，把theme后面的值改为next，记得要有空格，这是yml文件得遵循yml语法。</p><p><img alt="2" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226222142-371141.png"></p><p>然后使用之前说的三条指令启动本地测试，访问localhost:4000，就可以看到更换的next主题</p><p>NexT主题中还有四个不同风格的主题，我是用Gemini风格，这个可以改，在主题目录下（next）的_config.yml中查询 Schemes，然后下面有四种风格，都试试喜欢哪一种，把不用的注释，只能存在一个风格。</p><p><img alt="3" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226222143-959399.png"></p><h4 id="3-3-在菜单栏开启一些跳转页面"><a href="#3-3-在菜单栏开启一些跳转页面" class="headerlink" title="3.3 在菜单栏开启一些跳转页面"></a>3.3 在菜单栏开启一些跳转页面</h4><p>还是在主题目录下的_config.yml中。把想要的页面开启，去掉#即可。</p><p><img alt="4" data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/20191226222144-962329.png"></p><p>我开启的从上到下分别是：首页、阅读排行（这个是我加的原先没有，后面再说怎么加）、归档、分类、标签、关于我。<strong>可以在menu中调换显示顺序。</strong></p><p>但是这些页面不会自动生成，得我们创建。</p><p>比如：<strong>分类页面</strong>，在站点目录打开Git Bash，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new page categories</span></pre></td></tr></table></figure><p>然后去站点目录的source/categories的index.md 中，配置：copy过去即可。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span> <span class="comment"># 这要跟主题目录下的_config.yml的那个名称一样</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span> <span class="literal">false</span> <span class="comment"># 不开启评论</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><ul><li><strong>标签页面</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new page tags</span></pre></td></tr></table></figure><p>在source/tags的index.md 中</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">标签</span> <span class="comment"># 默认是显示英文，需要自己改中文</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><ul><li><strong>关于页面</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new page about</span></pre></td></tr></table></figure><p>在source/about的index.md 中</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">关于</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-11</span><span class="number">-30</span> <span class="number">22</span><span class="string">:52:16</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">"about"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 然后下面就可以使用Markdown语法介绍自己</span></span></pre></td></tr></table></figure><ul><li><strong>文章阅读排行页面</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new page top</span></pre></td></tr></table></figure><p>在source/top的index.md 中，添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">"top"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">id="top"&gt;&lt;/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;script</span> <span class="string">src="https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js"&gt;&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;script&gt;AV.initialize("PqPgFdX018fr1aVY5hzsSsNI-gzGzoHsz",</span> <span class="string">"3QD9vLXdOV4igzOOalSTkhkc"</span><span class="string">);&lt;/script&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;script</span> <span class="string">type="text/javascript"&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="string">var</span> <span class="string">time=0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="string">var</span> <span class="string">title=""</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="string">var</span> <span class="string">url=""</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="string">var</span> <span class="string">query</span> <span class="string">=</span> <span class="string">new</span> <span class="string">AV.Query('Counter');</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="string">query.notEqualTo('id',0);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="string">query.descending('time');</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="string">query.limit(1000);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="string">query.find().then(function</span> <span class="string">(todo)</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="string">for</span> <span class="string">(var</span> <span class="string">i=0;i&lt;1000;i++)&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">      <span class="string">var</span> <span class="string">result=todo[i].attributes;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">      <span class="string">time=result.time;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">      <span class="string">title=result.title;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">      <span class="string">url=result.url;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">      <span class="string">var</span> <span class="string">content="&lt;p&gt;"+"&lt;font</span> <span class="string">color='#1C1C1C'&gt;"+"【文章"+time+"人观看过】"+"&lt;/font&gt;"+"&lt;a</span> <span class="string">href='"+"https://flunggg.cn/"+url+"'&gt;"+title+"&lt;/a&gt;"+"&lt;/p&gt;";</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">      <span class="string">document.getElementById("top").innerHTML+=content</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="string">&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  <span class="string">&#125;,</span> <span class="string">function</span> <span class="string">(error)</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="string">console.log("error");</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">  <span class="string">&#125;);</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;/script&gt;</span></span></pre></td></tr></table></figure><p>并且在主题目录下，themes\next\languages 中找到我们最初在网站配置的语言，我是 zh-CN，所以我打开这个文件。在menu中添加 top: 阅读排行。<strong>每次在菜单栏新增就得在这里配置一个中文意思。</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">top:</span> <span class="string">阅读排行</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">schedule:</span> <span class="string">日程表</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益</span> <span class="number">404</span></span></pre></td></tr></table></figure><ul><li><strong>归档页面</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new page top</span></pre></td></tr></table></figure><p>然后source\archives中配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">archives</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">"archives"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure><blockquote><p> 观看下篇系列博文 NexT主题的美化</p></blockquote><p>参考：</p><p><a href="https://www.jianshu.com/p/d95cff938277" target="_blank" rel="external nofollow noopener noreferrer">Hexo博客搭建全攻略(二)：NexT主题配置</a></p>]]></content>
    
    <summary type="html">
    
      搭建博客系列：更换主题
    
    </summary>
    
    
      <category term="hexo" scheme="https://flunggg.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://flunggg.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建博客：入门</title>
    <link href="https://flunggg.cn/archives/f1c28309.html"/>
    <id>https://flunggg.cn/archives/f1c28309.html</id>
    <published>2019-12-17T15:28:39.000Z</published>
    <updated>2020-01-13T08:36:53.946Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><p>网上有很多hexo+nexT7的教程，很多因为现在版本问题，有些配置完会出错或者不生效。搭建这个博客用了我4天的时间，加上美化。<br>期间使用nexT5.0和hexo4.0导致访问路径有点问题，出现 <a href="http://localhost:4000/archives/20%/" target="_blank" rel="external nofollow noopener noreferrer">http://localhost:4000/archives/20%/</a> 我不明白咋回事，所以删了两次本地博客。结果发现是版本问题。</p><p><strong>首先在前面说清楚，每做完一步就给我使用三条指令本地测试（下面会说）一下，别傻傻的等着搞完一半甚至全部做完才来测试，要是出错那可是很致命的，最坏的结果当然是重做。如果每次都有测试要是出现bug就可以根据哪步来排除问题。</strong></p><p>而且我后期是使用阿里云服务器来搞的，别的服务器没碰过，但大致是一样的。后面有想搞域名的现在就可以先去搞域名，比如阿里云的万网（我是在这个搞的），腾讯云、百度云等都可以。并且先去备案。当然不备也可以，CDN加速都需要备案才可以申请。先把案备了以后也好办事。</p><h3 id="2-安装Node和Git"><a href="#2-安装Node和Git" class="headerlink" title="2.安装Node和Git"></a>2.安装Node和Git</h3><p>使用hexo需要安装两个前置工具: Node 和 Git。</p><p>Node直接默认安装就行，点击下载 <a href="http://nodejs.cn/download/" target="_blank" rel="external nofollow noopener noreferrer">Node</a>。安装完不用理。</p><p>Git也是直接下载，点击下载 <a href="https://git-scm.com/" target="_blank" rel="external nofollow noopener noreferrer">Git</a>。一直默认安装完需要如下操作：</p><ul><li><p>如果没有GitHub账号的，自己去注册，有账号的，直接创建一个新的仓库，名为 <code>yourgithubname.github.io</code>，其中<code>yourgithubname</code>是你的github名称，必须操作。比如我的：/ 前面是我的用户名，后面就是用我的用户名。<br><img alt data-src="/archives/f1c28309/gitname.png"></p></li><li><p>配置Git的SSH Key，第一次使用Git Bash使用一些配置：</p><ul><li>你的github用户名，非昵称，并填写你的github注册邮箱</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;name&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">git config --global user.email  &quot;xxx@qq.com&quot;</span></pre></td></tr></table></figure><ul><li>配置SSH，可以自己登录，每次部署就不用登录</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"邮件地址"</span></span></pre></td></tr></table></figure><ul><li><ul><li>然后连续3次回车，最终会生成一个文件在用户目录下，打开C盘下的用户目录下你的用户名继续打开，找到<code>.ssh\id_rsa.pub</code>文件（像我的 <code>C:\Users\chast\.ssh</code>），记事本打开并复制里面的内容，打开你的github主页，右上角点你的小头像进入<code>Settings -&gt; SSH and GPG keys -&gt; New SSH key</code>：</li><li>Title随便命名，把复制的内容粘贴到Key中。</li></ul></li></ul><p>  <img alt data-src="http://flunggg.oss-cn-shenzhen.aliyuncs.com/hexoImg/2019123020/20191230204837-701017.png"></p><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><ul><li>然后点开刚刚安装的git，在 Window开始界面会出现一个 Git Bash，点击它，然后在一个磁盘上面创建一个目录，随便名，再使用Git Bash定位到目录中<br><img alt data-src="/archives/f1c28309/1.png"></li><li>然后安装Hexo: 默认安装为4.0版本。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span></pre></td></tr></table></figure><ul><li>初始化Hexo</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo init</span></pre></td></tr></table></figure><ul><li>初始化就如下面这样。</li></ul><p>  <img alt data-src="/archives/f1c28309/%E7%AB%99%E7%82%B9%E7%9B%AE%E5%BD%95.png"></p><ul><li>以后在本地启动博客就使用下面三条指令。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo clean &#x2F;&#x2F; 清除缓存</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo g  &#x2F;&#x2F; 生成静态页面</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hexo s &#x2F;&#x2F; 启动本地项目</span></pre></td></tr></table></figure><ul><li>然后就可以在浏览器上访问 <a href="localhost:4000" target="_blank" rel="external nofollow noopener noreferrer">localhost:4000</a> 来看到最初的博客，如果看到说明成功了。</li><li>那部署博客到git上,先在站点目录下的_config.yml文件最后一行配置。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  type: git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  repository: https://github.com/yourgitname/yourgitname.github.io.git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  branch: master</span></pre></td></tr></table></figure><ul><li>再安装推送插件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></figure><ul><li>然后使用下面三条命令。 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">![主题配置文件css样式](D:\myblog\blog\source\_posts\hexo4-nexT7-6搭建博客（一）\主题配置文件css样式.png)hexo clean &#x2F;&#x2F; 清除缓存</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo g  &#x2F;&#x2F; 生成静态页面</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hexo d &#x2F;&#x2F; 部署</span></pre></td></tr></table></figure><h3 id="4-发表文章"><a href="#4-发表文章" class="headerlink" title="4.发表文章"></a>4.发表文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># 创建文章</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo new &quot;Hello My Blog&quot;</span></pre></td></tr></table></figure><p>然后会在站点目录下的source文件的_posts文件就会出现刚刚创建的文件，然后用Markdown语法来写作。推荐一个写作的：Typora。</p><p>然后在使用上面的三条指令部署到服务器。</p><h3 id="5-Hexo的目录结构"><a href="#5-Hexo的目录结构" class="headerlink" title="5.Hexo的目录结构"></a>5.Hexo的目录结构</h3><p><img alt="目录" data-src="/archives/f1c28309/%E7%9B%AE%E5%BD%95.png"></p><ul><li>如果想自定义修改站点主题的内容在：站点目录\themes\next\layout中修改，根据文件名。</li><li>如果想自己添加css样式，在主题配置文件中把下图的注释去掉，然后去对应的目录创建该文件，然后就在里面添加css样式。<img alt data-src="/archives/f1c28309/%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6css%E6%A0%B7%E5%BC%8F.png"></li></ul><h3 id="6-需要了解的一些名词"><a href="#6-需要了解的一些名词" class="headerlink" title="6.需要了解的一些名词"></a>6.需要了解的一些名词</h3><ul><li>站点目录：就是最开始初始化hexo的那个目录。</li><li>主题目录：就是站点目录下的themes中的主题文件。比如我用的是NexT主题，那么themes中就会有一个next文件，点进去就是主题目录。</li><li>因为站点目录和主题目录下都有_config.yml文件，所以别混了。</li><li>资源文件：站点目录下的source文件，保存我们写的创建的博文，和首页导航栏的跳转页面。</li><li>模板文件：站点目录下的scaffolds，里面有个post文件，可以修改博文格式，比如想每次创建固定加点什么，就不必每次创建博文自己去添加。</li></ul><h3 id="7-我的版本"><a href="#7-我的版本" class="headerlink" title="7.我的版本"></a>7.我的版本</h3><p>如何查看我的版本，在站点根目录下(hexo初始化的地方)有一个 packge.json ，里面就可以看到使用hexo初始化的结果。</p><p>主要注意跟我的hexo和等下要装的主题nexT是否一致，最好一致，可以在初始化后拿我下面的代码去覆盖原代码，然后使用 npm install ，会根据json中的代码重新安装一样的版本。<strong>不过建议别copy我的去安装，不知道会抱什么错，还是一步一步来。hexo版本和next主题版本一致对后面主题的美化有关系。</strong></p><p><strong>注意：未来应该不会更新，现在主要用的版本是 hexo4.0 和 next7.x，注意看版本</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"scripts"</span>: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"clean"</span>: <span class="string">"hexo clean"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"server"</span>: <span class="string">"hexo server"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"hexo"</span>: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"version"</span>: <span class="string">"4.0.0"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"gulp"</span>: <span class="string">"^4.0.2"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"gulp-clean"</span>: <span class="string">"^0.4.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"gulp-htmlclean"</span>: <span class="string">"^2.7.22"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"gulp-htmlmin"</span>: <span class="string">"^5.0.1"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"gulp-imagemin"</span>: <span class="string">"^6.2.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"gulp-minify-css"</span>: <span class="string">"^1.2.4"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"gulp-uglify"</span>: <span class="string">"^3.0.2"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^4.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-abbrlink"</span>: <span class="string">"^2.0.5"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-asset-image"</span>: <span class="string">"^1.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-autonofollow"</span>: <span class="string">"^1.0.1"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-baidu-url-submit"</span>: <span class="string">"0.0.6"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-deployer-git"</span>: <span class="string">"^2.1.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^1.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-baidu-sitemap"</span>: <span class="string">"^0.1.6"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^1.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-feed"</span>: <span class="string">"^2.2.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-index"</span>: <span class="string">"^1.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-search"</span>: <span class="string">"^2.4.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-searchdb"</span>: <span class="string">"^1.2.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-sitemap"</span>: <span class="string">"^2.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^1.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-neat"</span>: <span class="string">"^1.0.4"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^1.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-renderer-marked"</span>: <span class="string">"^2.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^1.1.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^1.0.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-symbols-count-time"</span>: <span class="string">"^0.7.0"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"hexo-wordcount"</span>: <span class="string">"^6.0.1"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"devDependencies"</span>: &#123;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><blockquote><p> 观看下篇系列博文 更换主题</p></blockquote>]]></content>
    
    <summary type="html">
    
      搭建博客系列：入门
    
    </summary>
    
    
      <category term="hexo" scheme="https://flunggg.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://flunggg.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello Myblog</title>
    <link href="https://flunggg.cn/archives/7d96358d.html"/>
    <id>https://flunggg.cn/archives/7d96358d.html</id>
    <published>2019-12-01T13:46:35.000Z</published>
    <updated>2019-12-27T15:18:26.401Z</updated>
    
    <content type="html"><![CDATA[<h3 id="已完成"><a href="#已完成" class="headerlink" title="已完成"></a>已完成</h3><blockquote><p>本博客搭建的技术: hexo4.0 + next7.6 + vps + cnd加速（不cnd加速了https的好贵）</p></blockquote><ul><li>引入<code>Valine</code>评论系统</li><li>引入Url持久化– <code>hexo-abbrlink</code>, 原本默认生成路径为 <code>【网站名称／年／月／日／文章名称】</code></li><li>成功配置gulp，压缩<code>css，js，image</code>，小加速博客</li><li>成功配置<code>git hooks</code>，实现每次即部署到<code>vps</code>也推到<code>github</code>上</li><li>引入<code>LeanCloud</code>，实现每篇文章<code>阅读次数</code></li><li>使用<code>不蒜子</code>统计 <code>记录文章字数</code> 和<code>页面访问量</code>和<code>站点总字数</code></li><li>加入代码雨特效和一些css，美化</li><li>SSL证书</li><li>待续</li></ul><h3 id="感慨"><a href="#感慨" class="headerlink" title="感慨"></a>感慨</h3><blockquote><p>搭建这博客，和遇到的很多问题，版本问题，包括如何美化，去研究了配置的源码，并且在服务器上刚开始不是很会用，所以折腾了3周的时间，哈哈真是折磨自己。</p><p>现在还有一个问题就是在手机打开时，这背景图会显示不好，我找不到解决方法，本想换主题，但是有些主题真的不错但是有些乱，我比较喜欢简洁，但是又有点炫酷，哈哈。</p><p>以后就在这写博客了，我一般发布在CSDN，现在多了一个发布的对象。能够用博文帮助到别人很开心，因为我也是常遇到很多问题，然后看了某些博文就知道怎么解决了，非常感谢那些人。</p><p>博客主要记录我学习的一些笔记和遇到的某些问题的解决方法。</p></blockquote>]]></content>
    
    <summary type="html">
    
      一些配置
    
    </summary>
    
    
      <category term="hexo" scheme="https://flunggg.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://flunggg.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
